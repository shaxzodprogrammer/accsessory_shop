{"version":3,"sources":["redux/types/AuthTypes.js","redux/reducers/AuthReducer.js","redux/reducers/RootReducer.js","utills/constants.js","assets/photo_2020-03-09_14-46-18.jpg","assets/photo_2020-03-09_14-46-12.jpg","pages/HomePage.js","utills/PublicRoute.js","utills/PrivateRoute.js","components/Navbar.js","utills/UsefullFunctions.js","utills/congifHeader.js","apiPath/apiPath.js","components/DefectComponent/NotAcceptedDefects.js","utills/Request.js","components/catalog_components/AdminRequests.js","pages/MainPage.js","pages/Report.js","components/catalog_components/AddEditModal.js","components/catalog_components/RemoveModal.js","components/catalog_components/CatalogTable.js","components/catalog_components/UserPane.js","components/catalog_components/ShopPane.js","components/catalog_components/WarehousePane.js","components/catalog_components/CategoryPane.js","components/catalog_components/ProductPane.js","components/warehouseComponents/WarehouseIncome.js","components/warehouseComponents/WarehouseOutput.js","pages/Warehouse.js","pages/Transfer.js","pages/Catalog.js","pages/Settings.js","pages/SellerSale.js","pages/SellerReject.js","pages/SellerDefect.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN","initialState","currentUser","auth","state","action","type","payload","rootReducer","combineReducers","BASE_URL","TOKEN","ROLE","HomePage","props","login","e","v","axios","post","then","res","localStorage","removeItem","toast","success","console","log","setItem","data","token","roleName","jwtDecode","roles","history","push","catch","error","hasError","applying","backgroundImage","imgcar","backgroundRepeat","backgroundPosition","backgroundSize","width","height","applying2","imgLogin","padding","className","style","onValidSubmit","this","name","placeholder","Component","connect","PublicRoute","component","rest","render","to","pathname","Navbar","role","tab","logout","onClick","getRoleNameFromJWT","getItem","configHeader","headers","apiPath","getAllUsersByPageable","getAllUsersRoleSeller","saveOrEditUser","changeUserActive","deleteUser","getAllShopsByPageable","saveOrEditShop","changeShopActive","deleteShop","getAllWarehousesByPageable","saveOrEditWarehouse","changeWarehouseActive","deleteWarehouse","getAllCategorysByPageable","saveOrEditCategory","deleteCategory","getAllProductByPageable","addProduct","editProduct","changeProductActive","deleteProduct","warehouses","searchProduct","saveOrEditTransfer","warehouseIncomes","acceptWarehouseIncome","removeWarehouseIncome","productCountByWarehouseId","saveOrEditTrade","getAllByFalseReport","deleteTrade","closeDay","getAllReportByStatus","acceptReport","saveReject","allReject","removeReject","acceptReject","saveOrEditDefect","allDefects","acceptDefect","removeDefect","productCount","totalCashFlow","request","method","url","AdminRequests","users","err","sellers","user","get","response","message","id","bool","enable","result","shops","shop","active","warehouse","reqParams","page","size","accepted","income","fromWarehouseId","toWarehouseId","startDate","endDate","categorys","category","products","product","object","val","req","prodId","wId","count","obj","trades","params","resp","status","shopId","warehouseId","productId","MainPage","item","totalElements","showCashFlowModal","setState","openTotalCashFlowModal","cacheOptions","loadOptions","inputValue","callback","setTimeout","filter","i","label","toLowerCase","includes","filterColors","defaultOptions","value","onInputChange","onChange","handleChange","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","itemClass","linkClass","link","document","createElement","href","Date","setAttribute","body","appendChild","click","Table","map","index","productName","warehouseProductCounts","item1","index1","Modal","isOpen","toggle","ModalBody","warehouseCashFlowDtos","warehouseDto","totalSum","ModalFooter","Report","reports","showPwaModal","showAcceptModal","reportId","shopList","allShops","openPwa","openAccept","s","target","selected","date","selectsStart","selectsEnd","minDate","shopDto","createdAt","substr","sum","managerDto","firstName","lastName","checked","pwa","itemm","productDto","amount","realSoldPrice","ModalHeader","AddEditModal","saveOrEdit","openModal","closeModal","currentItem","activeTab","showModal","defaultValue","phoneNumber","username","disabled","address","seller","parentCategoryDto","categories","incomePrice","salePrice","norma","categoryDto","RemoveModal","showRemoveModal","closeRemoveModal","remove","catalogTable","Row","Col","sm","title","dataType","striped","names","datas","scope","currentPage","changeActive","htmlFor","openRemoveModal","UserPane","allUsers","TabPane","tabId","CatalogTable","set","warning","length","password","removeUser","ShopPane","allUsersByRoleSeller","undefined","removeShop","WarehousePane","allWarehouses","removeWarehouse","CategoryPane","allCategories","removeCategory","ress","ProductPane","allProduct","saveOrEditProduct","removeProduct","WarehouseIncome","incomeList","totalPages","acceptedIncomeId","removeIncomeId","showItemModal","allWarehouseWithoutPageable","getWarehouseIncomeByApprove","getByApproved","getProdId","openAcceptModal","openPwaListModal","handlePageChange","getStartDate","getEndDate","toWarehouseDto","createdBy","fromWarehouseDto","preventDefault","productWithAmountDtos","tempArr","getAmount","splice","WarehouseOutput","showAddModal","outcomeList","removeOutcomeId","openAddModal","getProductCountByWarehouse","min","required","max","el","Number","Warehouse","Nav","tabs","NavItem","NavLink","TabContent","Transfer","getTransfers","getAllTransferByPageable","isAccepted","transfers","ignore","updateTransfer","_onChange","backgroundColor","outline","sellerDto","Button","updateReport","Catalog","Settings","SellerSale","showSaleModal","showTradePwaModal","showCloseDayModal","showTradeRemoveModal","discount","hasDiscount","totalAmount","totalDiscount","getTradesByAccepted","setTotalAmount","total","reduce","accumulator","currentValue","setTotalDiscount","t","discountType","openSaleModal","showTradePwa","showTradeRemove","openCloseDayModal","afterDiscountTotalSum","discountDto","getRealSoldPrice","tempPwa","temp","removeTrade","SellerReject","showAddRejectModal","showRejectPwaModal","showDeleteRejectModal","rejects","openAddRejectModal","openShowPwaModal","openRemoveRejectModal","manager","rejectTotalSum","SellerDefect","showDefectModal","defects","showRemoveDefectModal","openDefectModal","openPwaModal","openRemoveDefectModal","totalDefectSum","createBrowserHistory","routeMiddleware","routerMiddleware","middlewares","thunkMiddleware","store","createStore","compose","applyMiddleware","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1197fd71.chunk.js","sourcesContent":["export const LOGIN='LOGIN'","import {LOGIN} from \"../types/AuthTypes\";\r\n\r\nconst initialState={\r\n    currentUser:''\r\n}\r\n const auth=(state=initialState,action)=>{\r\n    switch (action.type){\r\n        case LOGIN : return {...state,currentUser: action.payload}\r\n        default :  return state\r\n    }\r\n}\r\n\r\nexport default auth","import {combineReducers} from \"redux\";\r\nimport auth from './AuthReducer'\r\n\r\nexport const rootReducer=combineReducers({\r\n    auth\r\n})","// export const BASE_URL='http://localhost:8080/api/'\r\nexport const BASE_URL='/api/'\r\nexport const TOKEN='Accessory Project JWT Token'\r\nexport const ROLE='USER ROLE'","export default __webpack_public_path__ + \"static/media/photo_2020-03-09_14-46-18.fe42a5a5.jpg\";","export default __webpack_public_path__ + \"static/media/photo_2020-03-09_14-46-12.166e0ad4.jpg\";","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\r\nimport axios from 'axios'\r\nimport {BASE_URL, ROLE, TOKEN} from \"../utills/constants\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport imgcar from '../assets/photo_2020-03-09_14-46-18.jpg';\r\nimport imgLogin from '../assets/photo_2020-03-09_14-46-12.jpg'\r\nimport {createPath} from \"history\";\r\n\r\nclass HomePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.removeItem(TOKEN)\r\n        localStorage.removeItem(ROLE)\r\n    }\r\n\r\n    login = (e, v) => {\r\n        axios.post(BASE_URL + 'auth/login', v).then(res => {\r\n            localStorage.removeItem(TOKEN)\r\n            toast.success(\"Successfully Login\", \"URA\")\r\n            console.log(res, 'RES LOGIN')\r\n            localStorage.setItem(TOKEN, res.data.type + res.data.token)\r\n            const parsedToken = jwtDecode(res.data.token)\r\n            // localStorage.setItem(ROLE, parsedToken.roles[0].roleName)\r\n            let roleName=parsedToken.roles[0].roleName\r\n            if (roleName === 'ROLE_DIRECTOR'){\r\n                this.props.history.push(\"/mainPage\")\r\n            }\r\n            else if(roleName === 'ROLE_MANAGER'){\r\n                this.props.history.push(\"/mainPage\")\r\n            }\r\n            else if(roleName === 'ROLE_SELLER'){\r\n                this.props.history.push(\"/sellerSale\")\r\n            }else {\r\n                this.props.history.push(\"/\")\r\n            }\r\n        }).catch(res => {\r\n            toast.error('Error Message', 'Unauthorized')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let applying = {\r\n            backgroundImage: 'url(' + imgcar + ')',\r\n            backgroundRepeat: 'no-repeat, repeat',\r\n            backgroundPosition: 'right center, left top',\r\n            backgroundSize: '100%, 100%',\r\n            width: '100%',\r\n            height: '100vh',\r\n        }\r\n        let applying2 = {\r\n            backgroundImage: 'url(' + imgLogin + ')',\r\n            backgroundRepeat: 'no-repeat, repeat',\r\n            backgroundPosition: 'left center, left top',\r\n            backgroundSize: '270%, 100%',\r\n            width: '100%',\r\n            height: '100vh',\r\n            padding: '17% 3%'\r\n        }\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\" style={applying2}>\r\n                        <AvForm onValidSubmit={this.login}>\r\n                            <AvField\r\n                                name=\"username\"\r\n                                placeholder=\"Login kiriting\"\r\n                            />\r\n                            <AvField\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Parol kiriting\"\r\n                            />\r\n                            <button type=\"submit\" className=\"btn btn-info\">\r\n                                Kirish\r\n                            </button>\r\n                        </AvForm>\r\n                    </div>\r\n                    <div className=\"col-md-8\" style={applying}>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHomePage.propTypes = {};\r\n\r\nexport default connect(null, null)(HomePage);","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {ORDER, NEW_USER_FOR_ORDER, ATTACHMENT, REGISTER_AGENT, PUSH_SERVICE} from \"./constants\";\r\n\r\nconst PublicRoute = ({component: Component, ...rest}) => {\r\n    return (<Route\r\n            {...rest}\r\n            render={props =>\r\n                <Component {...props}/>\r\n            }\r\n        />\r\n    )\r\n};\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nimport axios from \"axios\";\r\nimport {me} from \"../redux/actions/AuthAction\";\r\nimport {toast} from \"react-toastify\";\r\nimport {BASE_URL, TOKEN} from \"./constants\";\r\n\r\n\r\nconst PrivateRoute = ({currentUser,component: Component, ...rest}) => {\r\n    console.log(currentUser,'currentUser')\r\n\r\n    return (\r\n\r\n           currentUser?\r\n               <Route\r\n                   {...rest}\r\n                   render={props => {\r\n                       <Component {...props}/>\r\n                   }\r\n                   }\r\n               />\r\n               :\r\n               <Redirect\r\n                   to={{\r\n                       pathname: '/'\r\n                   }}\r\n               />\r\n    )\r\n};\r\n\r\nconst mapStateToProps=state=>({\r\n    currentUser:state.auth.currentUser\r\n})\r\nconst mapDispatchToProps=state=>({\r\n\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PrivateRoute)\r\n\r\n","import React, {useState} from \"react\";\r\nimport {ROLE, TOKEN} from \"../utills/constants\";\r\nimport {Redirect} from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction Navbar({role,history,tab}){\r\n    const logout=()=>{\r\n        localStorage.removeItem(TOKEN)\r\n        localStorage.removeItem(ROLE)\r\n        history.push('/')\r\n    }\r\n    return(\r\n        <div className=\"navbar nav\">\r\n            {role==='ROLE_DIRECTOR'?\r\n            <ul className=\"list-unstyled\">\r\n                {/*<li className=\"nav-item\">*/}\r\n                {/*    <Link to=\"/mainPage\">*/}\r\n                {/*        Director Main*/}\r\n                {/*    </Link>*/}\r\n                {/*</li>*/}\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/mainPage\">\r\n                        <button className={tab==='1'?\"btn navButton\":\"btn navBarButton\"}>\r\n                            Asosiy sahifa\r\n                        </button>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/report\">\r\n                        <button className={tab==='2'?\"btn navButton\":\"btn navBarButton\"}>\r\n                            Hisobotlar\r\n                        </button>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/warehouse\">\r\n                        <button className={tab==='3'?\"btn navButton\":\"btn navBarButton\"}>\r\n                            Ombor\r\n                        </button>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/sellerReject\">\r\n                        <button className={tab==='4'?\"btn navButton\":\"btn navBarButton\"}>\r\n                            Qaytgan Mollar\r\n                        </button>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/sellerDefect\">\r\n                        <button className={tab==='5'?\"btn navButton\":\"btn navBarButton\"}>\r\n                            Defect\r\n                        </button>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/catalog\">\r\n                        <button className={tab==='6'?\"btn navButton\":\"btn navBarButton\"}>\r\n                            Catalog\r\n                        </button>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\" onClick={logout}>\r\n                    <Link to=\"/\">\r\n                        <button className={tab==='7'?\"btn navButton\":\"btn navBarButton\"}>\r\n                            Chiqish\r\n                        </button>\r\n                    </Link>\r\n                </li>\r\n                {/*<li className=\"nav-item\"><button type=\"button\" className=\"btn btn-outline-dark border-0\" onClick={logout}>Chiqish</button></li>*/}\r\n            </ul>\r\n\r\n                :role==='ROLE_MANAGER'?\r\n                    <ul className=\"list-unstyled\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/mainPage\">\r\n                                <button className={tab==='1'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                    Asosiy sahifa\r\n                                </button>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/report\">\r\n                                <button className={tab==='2'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                    Hisobotlar\r\n                                </button>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/warehouse\">\r\n                                <button className={tab==='3'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                    Ombor\r\n                                </button>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/sellerReject\">\r\n                                <button className={tab==='4'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                    Qaytgan Mollar\r\n                                </button>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/sellerDefect\">\r\n                                <button className={tab==='5'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                    Defect\r\n                                </button>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/catalog\">\r\n                                <button className={tab==='6'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                    Catalog\r\n                                </button>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\" onClick={logout}>\r\n                            <Link to=\"/\">\r\n                                <button className={tab==='7'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                    Chiqish\r\n                                </button>\r\n                            </Link>\r\n                        </li>\r\n                        {/*<li className=\"nav-item\"><button type=\"button\" className=\"btn btn-outline-dark border-0\" onClick={logout}>Chiqish</button></li>*/}\r\n                    </ul>\r\n                    :role==='ROLE_SELLER'?\r\n                        <ul className=\"list-unstyled\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/sellerSale\">\r\n                                    <button className={tab==='1'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                        Sotuv\r\n                                    </button>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/report\">\r\n                                    <button className={tab==='2'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                        Hisobot\r\n                                    </button>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/warehouse\">\r\n                                    <button className={tab==='3'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                        Ombor\r\n                                    </button>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/sellerReject\">\r\n                                    <button className={tab==='4'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                        Qaytgan Mollar\r\n                                    </button>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/sellerDefect\">\r\n                                    <button className={tab==='5'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                        Defect\r\n                                    </button>\r\n                                </Link>\r\n                            </li>\r\n                            {/*<li className=\"nav-item\">*/}\r\n                            {/*    <Link to=\"/settings\">*/}\r\n                            {/*        Settings*/}\r\n                            {/*    </Link>*/}\r\n                            {/*</li>*/}\r\n                            <li className=\"nav-item\" onClick={logout}>\r\n                                <Link to=\"/\">\r\n                                    <button className={tab==='6'?\"btn navButton\":\"btn navBarButton\"}>\r\n                                        Chiqish\r\n                                    </button>\r\n                                </Link>\r\n                            </li>\r\n                            {/*<li className=\"nav-item\"><button type=\"button\" className=\"btn btn-outline-dark border-0\" onClick={logout}>Chiqish</button></li>*/}\r\n                        </ul>\r\n                        :\r\n                                <Redirect\r\n                                    to={{\r\n                                        pathname: '/'\r\n                                    }}\r\n                                />\r\n\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Navbar","import jwtDecode from \"jwt-decode\";\r\nimport {TOKEN} from \"./constants\";\r\n\r\nexport const getRoleNameFromJWT=()=>{\r\n    if (localStorage.getItem(TOKEN)){\r\n        const parsedToken = jwtDecode(localStorage.getItem(TOKEN))\r\n        return parsedToken.roles[0].roleName\r\n    }else {\r\n        return ''\r\n    }\r\n}","import {TOKEN} from \"./constants\";\r\n\r\nexport const configHeader=({headers:{\r\n        'Authorization':localStorage.getItem(TOKEN),\r\n        'Access-Control-Allow-Origin': '*'\r\n    }})","export const apiPath={\r\n    // Users\r\n    getAllUsersByPageable:'user/all',\r\n    getAllUsersRoleSeller:'user/all_seller',\r\n    saveOrEditUser:'user/saveOrEdit',\r\n    changeUserActive:'user/changeActive/',\r\n    deleteUser:'user/remove/',\r\n\r\n    // Shops\r\n    getAllShopsByPageable:'shop/all',\r\n    saveOrEditShop:'shop/saveOrEdit',\r\n    changeShopActive:'shop/changeActive/',\r\n    deleteShop:'shop/remove/',\r\n\r\n    // Warehouses\r\n    getAllWarehousesByPageable:'warehouse/all',\r\n    saveOrEditWarehouse:'warehouse/saveOrEdit',\r\n    changeWarehouseActive:'warehouse/changeActive/',\r\n    deleteWarehouse:'warehouse/remove/',\r\n\r\n    // Category\r\n    getAllCategorysByPageable:'category/all',\r\n    saveOrEditCategory:'category/saveOrEdit',\r\n    deleteCategory:'category/remove/',\r\n\r\n    // Product\r\n    getAllProductByPageable:'product/all',\r\n    addProduct:'product/addProduct',\r\n    editProduct:'product/editProduct',\r\n    changeProductActive:'product/changeActive/',\r\n    deleteProduct:'product/remove/',\r\n\r\n\r\n    //Transfer\r\n    warehouses:'warehouse/allAll',\r\n    searchProduct:'product/search',\r\n    saveOrEditTransfer:'transfer/saveOrEdit',\r\n    warehouseIncomes:'transfer/all?',\r\n    acceptWarehouseIncome:'transfer/accept',\r\n    removeWarehouseIncome:'transfer/remove',\r\n    productCountByWarehouseId:'transfer/countProductByWarehouse?prodId=',\r\n\r\n\r\n    //Trade\r\n    saveOrEditTrade:'trade/saveOrEdit',\r\n    getAllByFalseReport:'trade/getAllByDraftReport',\r\n    deleteTrade:'trade/remove/',\r\n    closeDay:'trade/closeDay/',\r\n\r\n    //Report\r\n    getAllReportByStatus:'report/getAllReportByStatus',\r\n    acceptReport:'report/accept/',\r\n\r\n    //Reject\r\n    saveReject:'reject/saveOrEdit',\r\n    allReject:'reject/all?',\r\n    removeReject:'reject/remove/',\r\n    acceptReject:'reject/accept/',\r\n\r\n    //Defect\r\n    saveOrEditDefect:'defect/saveOrEdit',\r\n    allDefects:'defect/all?',\r\n    acceptDefect:'defect/accept/',\r\n    removeDefect: 'defect/remove/',\r\n\r\n\r\n    //MainPage\r\n    productCount:'dashboard/productCount?',\r\n\r\n    totalCashFlow: 'dashboard/totalCashFlow'\r\n\r\n\r\n}","import React, {Component} from 'react';\r\n\r\nclass NotAcceptedDefects extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table \">\r\n                    <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Product</th>\r\n                        <th scope=\"col\">Amount</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Chexol Iphone5</td>\r\n                        <td>2</td>\r\n                        <td>28.04.2021</td>\r\n                        <td>\r\n                            <button className=\"btn btn-info\">edit</button>\r\n                            <button className=\"btn btn-danger ml-3\">delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Naushnik RedMi</td>\r\n                        <td>1</td>\r\n                        <td>20.04.2021</td>\r\n                        <td>\r\n                            <button className=\"btn btn-info \">edit</button>\r\n                            <button className=\"btn btn-danger ml-3\">delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Zaryadnik J6</td>\r\n                        <td>1</td>\r\n                        <td>15.04.2021</td>\r\n                        <td>\r\n                            <button className=\"btn btn-info\">edit</button>\r\n                            <button className=\"btn btn-danger ml-3\">delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotAcceptedDefects;","import axios from \"axios\";\r\nimport {BASE_URL, TOKEN} from \"./constants\";\r\nimport {apiPath} from \"../apiPath/apiPath\";\r\nimport {configHeader} from \"./congifHeader\";\r\n\r\nexport const request=(method,url,data)=>{\r\n    const token=localStorage.getItem(TOKEN)\r\n    const headers={\r\n        'Authorization':token,\r\n        'Access-Control-Allow-Origin': '*'\r\n    }\r\n     return axios({\r\n         url:BASE_URL+url,method,data,headers})\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../utills/constants\";\r\nimport {apiPath} from \"../../apiPath/apiPath\";\r\nimport {configHeader} from \"../../utills/congifHeader\";\r\nimport {toast} from \"react-toastify\";\r\nimport {request} from \"../../utills/Request\";\r\n\r\n/** Admin requests **/\r\nclass AdminRequests {\r\n\r\n    /** User operations **/\r\n    static async allUsers() {\r\n        let users = null;\r\n        await request('get',apiPath.getAllUsersByPageable)\r\n            .then(res => {\r\n                users = res.data;\r\n                console.log(users, 'RES USERS')\r\n            })\r\n            .catch(err => {\r\n                console.log(err,\"errorr\")\r\n            })\r\n        return users\r\n    }\r\n\r\n    static async allUsersByRoleSeller() {\r\n        let sellers = [];\r\n        await request('get',apiPath.getAllUsersRoleSeller)\r\n            .then(res => {\r\n                sellers = res.data;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return sellers\r\n    }\r\n\r\n    static async saveOrEditUser(user){\r\n        let response;\r\n        await request('post',apiPath.saveOrEditUser,user)\r\n            .then(res=>{\r\n                console.log(res,'SAVE Or EDIT RES')\r\n                axios.get(BASE_URL + apiPath.getAllUsersByPageable,\r\n                    configHeader)\r\n                    response=res.data\r\n                toast.success(res.data.message)\r\n            }).catch(res=>{\r\n            toast.error('Error')\r\n        })\r\n        return response\r\n    }\r\n\r\n    static async removeUser(id){\r\n        let bool=false;\r\n        await request('get',apiPath.deleteUser+id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE USER')\r\n                // toast.success(res.data.message)\r\n                toast.success(\"Deleted\")\r\n                bool=true\r\n            }).catch(error => {\r\n            // toast.error(error.data.message?error.data.message:\"Error\")\r\n            toast.error(\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    static async changeUserActive(id,enable){\r\n        let res=\"\";\r\n        await request('get',apiPath.changeUserActive+id)\r\n            .then(result=>{\r\n                res=result;\r\n            });\r\n        return res;\r\n    }\r\n\r\n\r\n    /** Shop operations **/\r\n    static async allShops() {\r\n        let shops = {};\r\n        await request('get',apiPath.getAllShopsByPageable)\r\n            .then(res => {\r\n                console.log(res,\"shops\")\r\n                shops = res.data;\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return shops\r\n    }\r\n\r\n    static async saveOrEditShop(shop){\r\n        let response;\r\n        await request('post',apiPath.saveOrEditShop,shop)\r\n            .then(res=>{\r\n                console.log(res,'SAVE Or EDIT RES')\r\n                axios.get(BASE_URL + apiPath.getAllShopsByPageable,\r\n                    configHeader)\r\n                response=res.data\r\n                toast.success(res.data.message)\r\n            }).catch(res=>{\r\n                toast.error('Error')\r\n            })\r\n        return response\r\n    }\r\n\r\n    static async removeShop(id){\r\n        let bool=false\r\n         await request('delete',apiPath.deleteShop+id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE USER')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n            toast.error(error.data?error.data:\"Error\")\r\n        })\r\n        return bool\r\n    }\r\n\r\n    static async changeShopActive(id,active){\r\n        let res=\"\";\r\n        await request('get',apiPath.changeShopActive+id)\r\n            .then(result=>{\r\n                res=result;\r\n            });\r\n        return res;\r\n    }\r\n\r\n    /** Warehouse operations **/\r\n    static async allWarehouses() {\r\n        let warehouses = {};\r\n        await request('get',apiPath.getAllWarehousesByPageable)\r\n            .then(res => {\r\n                warehouses = res.data;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return warehouses\r\n    }\r\n\r\n    static async saveOrEditWarehouse(warehouse){\r\n        let response;\r\n        console.log(warehouse,\"aaaaaaaaaa\")\r\n        await request('post',apiPath.saveOrEditWarehouse,warehouse)\r\n            .then(res=>{\r\n                console.log(res,'SAVE Or EDIT RES')\r\n                axios.get(BASE_URL + apiPath.getAllWarehousesByPageable,\r\n                    configHeader)\r\n                response=res.data\r\n                toast.success(res.data.message)\r\n            }).catch(res=>{\r\n                toast.error('Error')\r\n            })\r\n        return response\r\n    }\r\n\r\n    static async removeWarehouse(id){\r\n        let bool=false\r\n        await request('delete',apiPath.deleteWarehouse+id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE USER')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    static async changeWarehouseActive(id,active){\r\n        let res=\"\";\r\n        await request('get',apiPath.changeWarehouseActive+id)\r\n            .then(result=>{\r\n                res=result;\r\n            });\r\n        return res;\r\n    }\r\n\r\n    static async getWarehouseIncomeByApprove(reqParams){\r\n        let res;\r\n        await request('get',apiPath.warehouseIncomes+'page='+reqParams.page+\"&size=\"+reqParams.size+'&accepted='+reqParams.accepted+'&income='+reqParams.income+'&fromWarehouseId='+reqParams.fromWarehouseId+'&toWarehouseId='+reqParams.toWarehouseId+'&startDate='+reqParams.startDate+'&endDate='+reqParams.endDate)\r\n            .then(result=>{\r\n                res=result.data;\r\n            });\r\n        return res;\r\n    }\r\n    static async acceptWarehouseIncome(id){\r\n        let res;\r\n        await request('get',apiPath.acceptWarehouseIncome+'/'+id)\r\n            .then(result=>{\r\n                res=result.data;\r\n            });\r\n        return res;\r\n    }\r\n    static async removeWarehouseIncome(id){\r\n        let res;\r\n        await request('get',apiPath.removeWarehouseIncome+'/'+id)\r\n            .then(result=>{\r\n                res=result.data;\r\n            });\r\n        return res;\r\n    }\r\n\r\n    /** Category operations **/\r\n    static async allCategories() {\r\n        let categorys = [];\r\n        await request('get',apiPath.getAllCategorysByPageable)\r\n            .then(res => {\r\n                categorys = res.data;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return categorys\r\n    }\r\n\r\n    static async saveOrEditCategory(category){\r\n        let response;\r\n        console.log(category,\"category\")\r\n        await request('post',apiPath.saveOrEditCategory,category)\r\n            .then(res=>{\r\n                console.log(res,'SAVE Or EDIT RES')\r\n                axios.get(BASE_URL + apiPath.getAllCategorysByPageable,\r\n                    configHeader)\r\n                response=res.data\r\n                toast.success(res.data.message)\r\n            }).catch(res=>{\r\n                toast.error('Error')\r\n            })\r\n        return response\r\n    }\r\n\r\n    static async removeCategory(id){\r\n        let bool=false\r\n        await request('get',apiPath.deleteCategory + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE CATEGORY')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    /** Product operations **/\r\n\r\n    static async allProduct() {\r\n        let products = {};\r\n        await request('get', apiPath.getAllProductByPageable)\r\n            .then(res => {\r\n                products = res.data;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return products\r\n    }\r\n\r\n    static async saveOrEditProduct(product){\r\n        let response;\r\n        if (product.id){\r\n            await request('post',apiPath.editProduct,product)\r\n                .then(res=>{\r\n                    console.log(res,'EDIT RES')\r\n                    axios.get(BASE_URL + apiPath.getAllProductByPageable,\r\n                        configHeader)\r\n                    response=res.data\r\n                    toast.success(res.data.message)\r\n                }).catch(res=>{\r\n                    response=res\r\n                    toast.error('Error')\r\n                })\r\n        }\r\n        else {\r\n            await request('post',apiPath.addProduct,product)\r\n                .then(res=>{\r\n                    console.log(res,'EDIT RES')\r\n                    axios.get(BASE_URL + apiPath.getAllProductByPageable,\r\n                        configHeader)\r\n                    response=res.data\r\n                    toast.success(res.data.message)\r\n                }).catch(res=>{\r\n                    toast.error('Error')\r\n                    response=res\r\n                })\r\n        }\r\n        return response\r\n    }\r\n\r\n    static async removeProduct(id){\r\n        let bool=false\r\n        await request('get', apiPath.deleteProduct + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE PRODUCT')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    static async changeProductActive(id,active){\r\n        let res=\"\";\r\n        await request('get',apiPath.changeProductActive+id)\r\n            .then(result=>{\r\n                res=result;\r\n            });\r\n        return res;\r\n    }\r\n\r\n    static async allWarehouseWithoutPageable() {\r\n        let warehouses = [];\r\n        await request('get',apiPath.warehouses)\r\n            .then(res => {\r\n                warehouses = res.data.object;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return warehouses\r\n    }\r\n\r\n    static async searchProduct(val) {\r\n        let products = [];\r\n        await request('get',apiPath.searchProduct+'/'+val)\r\n            .then(res => {\r\n                products = res.data.object;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return products\r\n    }\r\n\r\n    static async saveOrEditTransfer(req) {\r\n\r\n        await request('post',apiPath.saveOrEditTransfer,req)\r\n            .then(res => {\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return null\r\n    }\r\n    static async getProductCountByWarehouse(prodId,wId) {\r\n        let count=0;\r\n        await request('get',apiPath.productCountByWarehouseId+prodId+\"&warehouseId=\"+wId)\r\n            .then(res => {\r\n                count=res.data.object\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return count\r\n    }\r\n\r\n    static async saveOrEditTrade(obj){\r\n        let response;\r\n        await request('post',apiPath.saveOrEditTrade,obj)\r\n            .then(res=>{\r\n                response=res.data\r\n                toast.success(res.data.message)\r\n            }).catch(res=>{\r\n                toast.error('Error')\r\n            })\r\n        return response\r\n    }\r\n\r\n    static async getTradesByAccepted() {\r\n        let trades = [];\r\n        await request('get',apiPath.getAllByFalseReport)\r\n            .then(res => {\r\n                trades = res.data.object;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return trades\r\n    }\r\n    static async removeTrade(id){\r\n        let bool=false\r\n        await request('delete', apiPath.deleteTrade + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE PRODUCT')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n    static async closeDay(id){\r\n        let bool=false\r\n        await request('get', apiPath.closeDay + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE PRODUCT')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    static async getAllReportByStatus(params) {\r\n        let resp = '';\r\n        await request('get',apiPath.getAllReportByStatus+\r\n            '?page='+params.page+'&size='+params.size+'&status='+params.status+'&startDate='+params.startDate + '&endDate=' + params.endDate+'&shopId='+params.shopId)\r\n            .then(res => {\r\n                resp = res.data;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return resp\r\n    }\r\n\r\n    static async acceptReport(id){\r\n        let bool=false\r\n        await request('put', apiPath.acceptReport + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE PRODUCT')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    static async saveReject(obj){\r\n        let response;\r\n        await request('post',apiPath.saveReject,obj)\r\n            .then(res=>{\r\n                response=res.data\r\n                toast.success(res.data.message)\r\n            }).catch(res=>{\r\n                toast.error('Error')\r\n            })\r\n        return response\r\n    }\r\n    static async allReject(params) {\r\n        let resp = '';\r\n        await request('get',apiPath.allReject+'page='+params.page+\r\n            '&size='+params.size+'&accepted='+params.accepted+'&warehouseId='+params.warehouseId)\r\n            .then(res => {\r\n                resp = res.data;\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        return resp\r\n    }\r\n\r\n    static async removeReject(id){\r\n        let bool=false\r\n        await request('delete', apiPath.removeReject + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE PRODUCT')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n    static async acceptReject(id){\r\n        let bool=false\r\n        await request('get', apiPath.acceptReject + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE PRODUCT')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    static async saveOrEditDefect(obj){\r\n        let response;\r\n        await request('post',apiPath.saveOrEditDefect,obj)\r\n            .then(res=>{\r\n                response=res.data\r\n                toast.success(res.data.message)\r\n            }).catch(res=>{\r\n                toast.error('Error')\r\n            })\r\n        return response\r\n    }\r\n\r\n    static async allDefects(params) {\r\n        let resp = '';\r\n        if (params.startDate&&params.endDate){\r\n            await request('get',apiPath.allDefects+'page='+params.page+\r\n                '&size='+params.size+'&accepted='+params.accepted+'&warehouseId='+params.warehouseId+\r\n                '&startDate='+params.startDate + '&endDate=' + params.endDate)\r\n                .then(res => {\r\n                    resp = res.data;\r\n                })\r\n                .catch(err => {\r\n\r\n                })\r\n        }else {\r\n            await request('get', apiPath.allDefects + 'page=' + params.page +\r\n                '&size=' + params.size + '&accepted=' + params.accepted + '&warehouseId=' + params.warehouseId)\r\n                .then(res => {\r\n                    resp = res.data;\r\n                })\r\n                .catch(err => {\r\n                })\r\n        }\r\n        return resp\r\n    }\r\n    static async acceptDefect(id){\r\n        let bool=false\r\n        await request('get', apiPath.acceptDefect + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE PRODUCT')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    static async removeDefect(id){\r\n        let bool=false\r\n        await request('delete', apiPath.removeDefect + id)\r\n            .then(res => {\r\n                console.log(res, 'RES REMOVE PRODUCT')\r\n                toast.success(res.data.message)\r\n                bool=true\r\n            }).catch(error => {\r\n                toast.error(error.data?error.data:\"Error\")\r\n            })\r\n        return bool\r\n    }\r\n\r\n    static async productCount(params){\r\n        let resp = '';\r\n        await request('get',apiPath.productCount+'page='+params.page+\r\n            '&size='+params.size+'&' +\r\n            'productId='+params.productId)\r\n            .then(res => {\r\n                resp = res.data;\r\n            })\r\n            .catch(err => {\r\n            })\r\n        return resp\r\n    }\r\n\r\n    static async totalCashFlow(){\r\n        let resp = '';\r\n        await request('get',apiPath.totalCashFlow)\r\n            .then(res => {\r\n                resp = res.data;\r\n            })\r\n            .catch(err => {\r\n            })\r\n        return resp\r\n    }\r\n}\r\n\r\nexport default AdminRequests;","import React, {Component} from 'react';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {connect} from 'react-redux'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport AddDefectProduct from \"../components/DefectComponent/AddDefectProduct\";\r\nimport NotAcceptedDefects from \"../components/DefectComponent/NotAcceptedDefects\";\r\nimport AcceptedDefects from \"../components/DefectComponent/AcceptedDefects\";\r\nimport AsyncSelect from \"react-select/async/dist/react-select.esm\";\r\nimport AdminRequests from \"../components/catalog_components/AdminRequests\";\r\nimport {Modal, ModalBody, ModalFooter, Table} from \"reactstrap\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport {BASE_URL} from \"../utills/constants\";\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            item: '',\r\n            productCount: [],\r\n            page: 0,\r\n            size: 10,\r\n            productId: '',\r\n            totalElements: 0,\r\n            totalCashFlow: '',\r\n            showCashFlowModal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.productCount({\r\n            page: this.state.page,\r\n            size: this.state.size,\r\n            productId: this.state.productId\r\n        }).then(res => {\r\n            console.log(res, \"_______RREESS______\")\r\n            this.setState({\r\n                productCount: res.object,\r\n                totalElements: res.totalElements\r\n            })\r\n        })\r\n        AdminRequests.totalCashFlow().then(response => {\r\n            console.log(response, \"TOTAL_CASH_FLOW\")\r\n            this.setState({\r\n                totalCashFlow: response\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {history} = this.props\r\n        const filterColors = (inputValue) => {\r\n            if (inputValue) {\r\n                return this.state.products.filter(i =>\r\n                    i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n                );\r\n            }\r\n        };\r\n        const loadOptions = (inputValue, callback) => {\r\n            setTimeout(() => {\r\n                callback(filterColors(inputValue));\r\n            }, 100);\r\n        };\r\n        const getProdId = (val) => {\r\n            AdminRequests.searchProduct(val).then(res => {\r\n                this.setState({products: res})\r\n            })\r\n        }\r\n        const handleChange = (e) => {\r\n            AdminRequests.productCount({page: this.state.page, size: this.state.size, productId: e.id}).then(res => {\r\n                console.log(res, \"_______RREESS______\")\r\n                this.setState({\r\n                    productCount: res.object,\r\n                    totalElements: res.totalElements,\r\n                    item: e,\r\n                    productId: e.id\r\n                })\r\n            })\r\n        }\r\n        const getAllByPageable = () => {\r\n            AdminRequests.productCount({page: 0, size: 10, productId: ''}).then(res => {\r\n                console.log(res, \"_______RREESS______\")\r\n                this.setState({\r\n                    productCount: res.object,\r\n                    totalElements: res.totalElements,\r\n                    page: 0,\r\n                    size: 10,\r\n                    productId: '',\r\n                    item: ''\r\n                })\r\n            })\r\n        }\r\n        const handlePageChange = (pageNumber) => {\r\n            AdminRequests.productCount({\r\n                page: pageNumber - 1,\r\n                size: this.state.size,\r\n                productId: this.state.productId\r\n            }).then(res => {\r\n                console.log(res, \"_______RREESS______\")\r\n                this.setState({\r\n                    productCount: res.object,\r\n                    totalElements: res.totalElements,\r\n                    page: pageNumber - 1\r\n                })\r\n            })\r\n        }\r\n        const getExel = () => {\r\n            const url = BASE_URL + 'excel/productCountByWarehouse'\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            console.log(new Date(), \"DATE\")\r\n            link.setAttribute('download', \"Product Count by \" + new Date() + \".xlsx\"); //or any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        }\r\n        const openTotalCashFlowModal = () => {\r\n            this.setState({\r\n                showCashFlowModal: !this.state.showCashFlowModal\r\n            })\r\n        }\r\n        return (\r\n            getRoleNameFromJWT() ?\r\n                <div className='row row-style'>\r\n                    <div className='col-md-2 col-2-style'>\r\n                        <Navbar role={getRoleNameFromJWT()} history={history} tab=\"1\"/>\r\n                    </div>\r\n                    <div className='col-md-10 col-10-style'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-1\">\r\n                                <button className=\"btn btn-success\" onClick={getAllByPageable}>Barchasi</button>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <AsyncSelect\r\n                                    name=\"prodId\"\r\n                                    cacheOptions\r\n                                    loadOptions={loadOptions}\r\n                                    defaultOptions\r\n                                    value={this.state.item ? this.state.item : ''}\r\n                                    onInputChange={getProdId}\r\n                                    onChange={(e) => handleChange(e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <Pagination\r\n                                    activePage={this.state.page + 1}\r\n                                    itemsCountPerPage={this.state.size}\r\n                                    totalItemsCount={this.state.totalElements}\r\n                                    pageRangeDisplayed={5}\r\n                                    onChange={handlePageChange}\r\n                                    itemClass=\"page-item\"\r\n                                    linkClass=\"page-link\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-2\">\r\n                                {\r\n                                    getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                        <button className=\"btn btn-info\" onClick={getExel}>Download</button>:''\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                {\r\n                                    getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                <button className=\"btn btn-warning\" onClick={() => openTotalCashFlowModal()}>Tovar\r\n                                    oborot\r\n                                </button>:''}\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <Table>\r\n                                <tr>\r\n                                    <th>T/R</th>\r\n                                    <th>Mahsulot Nomi</th>\r\n                                    <th>Mahsulot Soni</th>\r\n                                </tr>\r\n                                {\r\n                                    this.state.productCount && this.state.productCount.map((item, index) =>\r\n                                        <tr>\r\n                                            <td>{index + 1 + (this.state.page * this.state.size)}</td>\r\n                                            <td>{item.productName}</td>\r\n                                            <td>\r\n                                                {item.warehouseProductCounts && item.warehouseProductCounts.map((item1, index1) =>\r\n                                                    <p>{index1 + 1} {item1.name} : {item1.count}</p>\r\n                                                )}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </Table>\r\n                            <Modal isOpen={this.state.showCashFlowModal} toggle={openTotalCashFlowModal}>\r\n                                <ModalBody>\r\n                                    <Table>\r\n                                        <tr>\r\n                                            <th>\r\n                                                T/R\r\n                                            </th>\r\n                                            <th>\r\n                                                Ombor nomi\r\n                                            </th>\r\n                                            <th>\r\n                                                Summa\r\n                                            </th>\r\n                                        </tr>\r\n                                        {\r\n                                            this.state.totalCashFlow ? this.state.totalCashFlow.warehouseCashFlowDtos && this.state.totalCashFlow.warehouseCashFlowDtos.map((item, index) =>\r\n                                                <tr>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{item.warehouseDto.name}</td>\r\n                                                    <td>{item.totalSum}</td>\r\n                                                </tr>\r\n                                            )\r\n                                                : ''\r\n                                        }\r\n                                    </Table>\r\n                                    <h3>Jami\r\n                                        : {this.state.totalCashFlow ? this.state.totalCashFlow.totalSum : 0} UZS</h3>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <button className=\"btn btn-warning\" onClick={openTotalCashFlowModal}>Yopish</button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Redirect to=\"/\"/>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst states = state => ({\r\n    currentUser: state.auth.currentUser\r\n})\r\n\r\nMainPage.propTypes = {};\r\n\r\nexport default connect(states, null)(MainPage);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {BASE_URL, ROLE} from \"../utills/constants\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AdminRequests from \"../components/catalog_components/AdminRequests\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass Report extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n            size: 10,\r\n            status: 'NEW',\r\n            reports: [],\r\n            totalElements: 0,\r\n            item: '',\r\n            showPwaModal: false,\r\n            showAcceptModal: false,\r\n            reportId: '',\r\n            shopId: 0,\r\n            startDate: '',\r\n            endDate: '',\r\n            shopList:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allShops().then(res=>{\r\n            console.log(res,'ALL_SHOPS')\r\n            this.setState({\r\n                shopList:res.object\r\n            })\r\n        })\r\n        AdminRequests.getAllReportByStatus({\r\n            page: this.state.page,\r\n            size: this.state.size,\r\n            status: this.state.status,\r\n            startDate: '', endDate: '',\r\n            shopId: this.state.shopId\r\n        }).then(res => {\r\n            console.log(res, 'REPORTS')\r\n            this.setState({\r\n                reports: res.object,\r\n                totalElements: res.totalElements\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {history} = this.props\r\n\r\n        const openPwa = (item) => {\r\n            console.log(item, 'ITEMMMMMM')\r\n            this.setState({\r\n                item,\r\n                showPwaModal: !this.state.showPwaModal\r\n            })\r\n        }\r\n\r\n        const openAccept = (id) => {\r\n            this.setState({\r\n                showAcceptModal: !this.state.showAcceptModal,\r\n                reportId: id\r\n            })\r\n        }\r\n        const accept = () => {\r\n            AdminRequests.acceptReport(this.state.reportId).then(response => {\r\n                AdminRequests.getAllReportByStatus({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    status: this.state.status\r\n                }).then(res => {\r\n                    console.log(res, 'REPORTS')\r\n                    this.setState({\r\n                        reports: res.object,\r\n                        totalElements: res.totalElements,\r\n                        showAcceptModal: !this.state.showAcceptModal,\r\n                        reportId: ''\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const getByStatus = (e) => {\r\n            let s = e.target.value\r\n            AdminRequests.getAllReportByStatus({\r\n                page: this.state.page,\r\n                size: this.state.size,\r\n                status: s,\r\n                startDate: this.state.startDate,\r\n                endDate: this.state.endDate,\r\n                shopId: this.state.shopId\r\n            }).then(res => {\r\n                console.log(res, 'REPORTS')\r\n                this.setState({\r\n                    reports: res.object,\r\n                    totalElements: res.totalElements,\r\n                    status: s\r\n                })\r\n            })\r\n        }\r\n        const handlePageChange = (pageNumber) => {\r\n            AdminRequests.getAllReportByStatus({\r\n                page: pageNumber - 1,\r\n                size: this.state.size,\r\n                status: this.state.status,\r\n                startDate: this.state.startDate,\r\n                endDate: this.state.endDate,\r\n                shopId: this.state.shopId\r\n            }).then(res => {\r\n                console.log(res, 'REPORTS')\r\n                this.setState({\r\n                    reports: res.object,\r\n                    totalElements: res.totalElements,\r\n                    page: pageNumber - 1\r\n                })\r\n            })\r\n        }\r\n        const getStartDate = (startDate) => {\r\n            if (this.state.endDate) {\r\n                AdminRequests.getAllReportByStatus({\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    status: this.state.status,\r\n                    startDate,\r\n                    endDate: this.state.endDate,\r\n                    shopId: this.state.shopId\r\n                }).then(res => {\r\n                    console.log(res, 'REPORTS')\r\n                    this.setState({\r\n                        reports: res.object,\r\n                        totalElements: res.totalElements,\r\n                        startDate\r\n                    })\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    startDate\r\n                })\r\n            }\r\n        }\r\n        const getEndDate = (endDate) => {\r\n            AdminRequests.getAllReportByStatus({\r\n                page: this.state.page,\r\n                size: this.state.size,\r\n                status: this.state.status,\r\n                startDate: this.state.startDate,\r\n                endDate,\r\n                shopId: this.state.shopId\r\n            }).then(res => {\r\n                console.log(res, 'REPORTS')\r\n                this.setState({\r\n                    reports: res.object,\r\n                    totalElements: res.totalElements,\r\n                    endDate\r\n                })\r\n            })\r\n        }\r\n        const getByShopId=(e)=>{\r\n            let s=e.target.value;\r\n            console.log(s,'SHOP ID')\r\n            AdminRequests.getAllReportByStatus({\r\n                page:this.state.page,\r\n                size: this.state.size,\r\n                status: this.state.status,\r\n                startDate: this.state.startDate,\r\n                endDate: this.state.endDate,\r\n                shopId: s\r\n            }).then(res => {\r\n                console.log(res, 'REPORTS')\r\n                this.setState({\r\n                    reports: res.object,\r\n                    totalElements: res.totalElements,\r\n                    shopId:s\r\n                })\r\n            })\r\n        }\r\n        return (\r\n            getRoleNameFromJWT() ?\r\n                <div className='row row-style'>\r\n                    <div className='col-md-2 col-2-style'>\r\n                        <Navbar role={getRoleNameFromJWT()} history={history} tab=\"2\"/>\r\n                    </div>\r\n                    <div className='col-md-10 col-10-style'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <select name=\"status\" id=\"status\" onChange={getByStatus}>\r\n                                    <option value=\"NEW\">Tasdiqlanmagan</option>\r\n                                    <option value=\"ACCEPTED\">Tasdiqlangan</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <DatePicker\r\n                                    selected={this.state.startDate}\r\n                                    onChange={(date) => getStartDate(date)}\r\n                                    selectsStart\r\n                                    startDate={this.state.startDate}\r\n                                    endDate={this.state.endDate}\r\n                                />\r\n                                <DatePicker\r\n                                    selected={this.state.endDate}\r\n                                    onChange={(date) => getEndDate(date)}\r\n                                    selectsEnd\r\n                                    startDate={this.state.startDate}\r\n                                    endDate={this.state.endDate}\r\n                                    minDate={this.state.startDate}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3\">\r\n                                {\r\n                                    getRoleNameFromJWT()==='ROLE_DIRECTOR'\r\n                                    ||\r\n                                        getRoleNameFromJWT()==='ROLE_MANAGER'?\r\n                                        <select name=\"status\" id=\"status\" onChange={getByShopId}>\r\n                                            <option value=\"0\">Barchasi</option>\r\n                                            {\r\n                                                this.state.shopList&&this.state.shopList.map((item)=>\r\n                                                    <option value={item.id}>{item.name}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                        :''\r\n                                }\r\n\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                {\r\n                                    this.state.startDate && this.state.endDate ?\r\n                                        '' :\r\n                                        <Pagination\r\n                                            activePage={this.state.page + 1}\r\n                                            itemsCountPerPage={this.state.size}\r\n                                            totalItemsCount={this.state.totalElements}\r\n                                            pageRangeDisplayed={5}\r\n                                            onChange={handlePageChange}\r\n                                            itemClass=\"page-item\"\r\n                                            linkClass=\"page-link\"\r\n                                        />\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-5\">\r\n                            <Table>\r\n                                <tr>\r\n                                    <th>T/R</th>\r\n                                    <th>Magazin</th>\r\n                                    <th>Sana</th>\r\n                                    <th>Summa</th>\r\n                                    <th>Kim qabul qilgan</th>\r\n                                    <th>Tasdiqlangan</th>\r\n                                    <th>Maxsulotlar</th>\r\n                                    {\r\n                                        getRoleNameFromJWT() === 'ROLE_MANAGER'\r\n                                        || getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                            <th>Action</th> : ''\r\n                                    }\r\n\r\n                                </tr>\r\n                                {this.state.reports && this.state.reports.map((item, index) =>\r\n                                    <tr>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.shopDto.name}</td>\r\n                                        <td>{item.createdAt.substr(0, 10) + '  |  ' + item.createdAt.substr(11, 5)}</td>\r\n                                        <td>{item.sum}</td>\r\n                                        <td>{item.managerDto ? item.managerDto.firstName + ' ' + item.managerDto.lastName : ''}</td>\r\n                                        <td><input type=\"checkbox\" checked={item.status === 'ACCEPTED'}/></td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-info\" onClick={() => openPwa(item)}>...</button>\r\n                                        </td>\r\n                                        {\r\n                                            getRoleNameFromJWT() === 'ROLE_MANAGER'\r\n                                            || getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                                item.status === 'NEW' ?\r\n                                                    <td>\r\n                                                        <button className=\"btn btn-success\"\r\n                                                                onClick={() => openAccept(item.id)}>Tasdiqlash\r\n                                                        </button>\r\n                                                    </td> : '' : ''\r\n                                        }\r\n                                    </tr>\r\n                                )}\r\n                            </Table>\r\n                        </div>\r\n                        <Modal isOpen={this.state.showPwaModal} toggle={() => openPwa('')}>\r\n                            <ModalBody>\r\n                                <Table>\r\n                                    <tr>\r\n                                        <th>T/R</th>\r\n                                        <th>Maxsulot Nomi</th>\r\n                                        <th>Soni</th>\r\n                                        <th>Real Sotilgan narxi</th>\r\n                                    </tr>\r\n                                    {this.state.item ? this.state.item.pwa && this.state.item.pwa.map((itemm, index) =>\r\n                                        <tr>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{itemm.productDto.name}</td>\r\n                                            <td>{itemm.amount}</td>\r\n                                            <td>{itemm.realSoldPrice}</td>\r\n                                        </tr>\r\n                                    )\r\n\r\n                                        : ''\r\n                                    }\r\n                                </Table>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button className=\"btn btn-warning\" onClick={() => openPwa('')}>Yopish</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                        <Modal isOpen={this.state.showAcceptModal} toggle={() => openAccept('')}>\r\n                            <ModalHeader>Tasdiqlaysizmi?</ModalHeader>\r\n                            <ModalFooter>\r\n                                <button className=\"btn btn-danger\" onClick={() => openAccept('')}>Bekor Qilish\r\n                                </button>\r\n                                <button className=\"btn btn-warning\" onClick={accept}>Ha</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Redirect to=\"/\"/>\r\n        );\r\n    }\r\n}\r\n\r\nReport.propTypes = {};\r\n\r\nexport default Report;","import React, {useState} from \"react\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\n\r\nfunction AddEditModal({state,saveOrEdit,openModal,closeModal,saveOrEditShop, saveOrEditWarehouse}) {\r\n\r\n    console.log(state.currentItem,\"aaaaaaaaaaaaaaaaaaaaaaaaaaaa\")\r\n\r\n    switch (state.activeTab) {\r\n        case '1':\r\n            return(\r\n                <Modal isOpen={state.showModal}\r\n                       toggle={() => closeModal()}>\r\n                    <ModalHeader>{state.currentItem ? 'Tahrirlash' : 'Yangi user qoshish'}</ModalHeader>\r\n                    <AvForm onValidSubmit={saveOrEdit}>\r\n                        <ModalBody>\r\n                            <AvField\r\n                                label=\"Ism kiriting :\"\r\n                                name=\"firstName\"\r\n                                placeholder=\"Ism kiriting\"\r\n                                defaultValue={state.currentItem ? state.currentItem.firstName : ''}\r\n                            />\r\n                            <AvField\r\n                                label=\"Familiya kiriting :\"\r\n                                name=\"lastName\"\r\n                                placeholder=\"Familiya kiriting\"\r\n                                defaultValue={state.currentItem ? state.currentItem.lastName : ''}\r\n                            />\r\n                            <AvField\r\n                                label=\"Telefon raqam kiriting :\"\r\n                                name=\"phoneNumber\"\r\n                                placeholder=\"Telefon raqamini kiriting\"\r\n                                defaultValue={state.currentItem?state.currentItem.phoneNumber:''}\r\n                            />\r\n                            <AvField\r\n                                label=\"Login kiriting :\"\r\n                                name=\"username\"\r\n                                placeholder=\"Login kiriting\"\r\n                                defaultValue={state.currentItem?state.currentItem.username:''}\r\n                            />\r\n                            {/*{state.currentItem?'':*/}\r\n                                <AvField\r\n                                    label=\"Parol kiriting :\"\r\n                                    type=\"text\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Parol kiriting\"\r\n                                    defaultValue=''\r\n                                />\r\n                            {/*}*/}\r\n                            {\r\n\r\n                                state.currentItem && state.currentItem.roleName==='ROLE_DIRECTOR'?\r\n                                   ''\r\n                                    :\r\n                                    <AvField\r\n                                        label=\"Mansab tanlang:\"\r\n                                        type=\"select\"\r\n                                        name=\"roleName\"\r\n                                        placeholder=\"Mansab tanlang : \"\r\n                                        defaultValue={state.currentItem?state.currentItem.roleName:''}\r\n                                    >\r\n                                        <option value=\"\" disabled={true}>Lavozim tanlang</option>\r\n                                        <option value=\"ROLE_SELLER\">Sotuvchi</option>\r\n                                        <option value=\"ROLE_MANAGER\">Manager</option>\r\n                                    </AvField>\r\n                            }\r\n\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <button type=\"button\" onClick={() => closeModal()} className=\"btn btn-danger\">Bekor qilish\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Saqlash</button>\r\n                        </ModalFooter>\r\n                    </AvForm>\r\n                </Modal>\r\n\r\n            );\r\n        case '2':\r\n            return(\r\n                <Modal isOpen={state.showModal}\r\n                       toggle={() => openModal()}>\r\n                    <ModalHeader>{state.currentItem ? 'Tahrirlash' : 'Yangi magazin qoshish'}</ModalHeader>\r\n                    <AvForm onValidSubmit={saveOrEdit}>\r\n                        <ModalBody>\r\n                            <AvField\r\n                                name=\"name\"\r\n                                placeholder=\"Nomi\"\r\n                                defaultValue={state.currentItem ? state.currentItem.name : ''}\r\n                            />\r\n                            <AvField\r\n                                name=\"address\"\r\n                                placeholder=\"Address\"\r\n                                defaultValue={state.currentItem ? state.currentItem.address : ''}\r\n                            />\r\n                            {/*<AvField*/}\r\n                            {/*    name=\"description\"*/}\r\n                            {/*    placeholder=\"Sharh\"*/}\r\n                            {/*    defaultValue={state.currentItem?state.currentItem.description:''}*/}\r\n                            {/*/>*/}\r\n\r\n                            <AvField\r\n                                type=\"select\"\r\n                                name=\"seller\"\r\n                                placeholder=\"Sotuvchini tanlang\"\r\n                                defaultValue={state.currentItem&&state.currentItem.seller?state.currentItem.seller.id:''}\r\n                            >\r\n                                <option value=\"\" disabled={true}>Sotuvchi tanlang</option>\r\n                                {state.sellers?state.sellers.map((seller)=>\r\n                                    <option key={seller.id} value={seller.id}>{seller.firstName+\" \"+seller.lastName}</option>\r\n                                ):''\r\n\r\n                                }\r\n\r\n                            </AvField>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <button type=\"button\" onClick={() => openModal()} className=\"btn btn-danger\">Bekor qilish\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Saqlash</button>\r\n                        </ModalFooter>\r\n                    </AvForm>\r\n                </Modal>\r\n\r\n            );\r\n\r\n\r\n        case '3':\r\n            return(\r\n                <Modal isOpen={state.showModal}\r\n                       toggle={() => openModal()}>\r\n                    <ModalHeader>{state.currentItem ? 'Tahrirlash' : 'Yangi ombor qoshish'}</ModalHeader>\r\n                    <AvForm onValidSubmit={saveOrEdit}>\r\n                        <ModalBody>\r\n                            <AvField\r\n                                name=\"name\"\r\n                                placeholder=\"Nomi\"\r\n                                defaultValue={state.currentItem ? state.currentItem.name : ''}\r\n                            />\r\n                            <AvField\r\n                                name=\"address\"\r\n                                placeholder=\"Address\"\r\n                                defaultValue={state.currentItem ? state.currentItem.address : ''}\r\n                            />\r\n                            {/*<AvField*/}\r\n                            {/*    name=\"description\"*/}\r\n                            {/*    placeholder=\"Sharh\"*/}\r\n                            {/*    defaultValue={state.currentItem?state.currentItem.phoneNumber:''}*/}\r\n                            {/*/>*/}\r\n\r\n                            {/*<AvField*/}\r\n                            {/*    type=\"select\"*/}\r\n                            {/*    name=\"seller\"*/}\r\n                            {/*    placeholder=\"Sotuvchini tanlang\"*/}\r\n                            {/*    defaultValue={state.currentItem?state.currentItem.seller.id:''}*/}\r\n                            {/*>*/}\r\n                            {/*    <option value=\"\" disabled={true}>Sotuvchi tanlang</option>*/}\r\n                            {/*    {state.sellers.map((seller)=>*/}\r\n                            {/*        <option key={seller.id} value={seller.id}>{seller.firstName+\" \"+seller.lastName}</option>*/}\r\n                            {/*    )*/}\r\n\r\n                            {/*    }*/}\r\n                            {/*    /!*<option value=\"ROLE_SELLER\">Sotuvchi</option>*!/*/}\r\n                            {/*    /!*<option value=\"ROLE_MANAGER\">Manager</option>*!/*/}\r\n                            {/*</AvField>*/}\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <button type=\"button\" onClick={() => openModal()} className=\"btn btn-danger\">\r\n                                Bekor qilish\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Saqlash</button>\r\n                        </ModalFooter>\r\n                    </AvForm>\r\n                </Modal>\r\n            );\r\n\r\n\r\n        case '4':\r\n            return(\r\n                <Modal isOpen={state.showModal}\r\n                       toggle={() => openModal()}>\r\n                    <ModalHeader>{state.currentItem ? 'Tahrirlash' : 'Yangi kategoriya qoshish'}</ModalHeader>\r\n                    <AvForm onValidSubmit={saveOrEdit}>\r\n                        <ModalBody>\r\n                            <AvField\r\n                                name=\"name\"\r\n                                placeholder=\"Nomi\"\r\n                                defaultValue={state.currentItem ? state.currentItem.name : ''}\r\n                            />\r\n\r\n                            <AvField\r\n                                type=\"select\"\r\n                                name=\"parentCategoryDto\"\r\n                                placeholder=\"Sub kategoriya tanlang\"\r\n                                defaultValue={state.currentItem&&state.currentItem.parentCategoryDto?state.currentItem.parentCategoryDto.id:''}\r\n                            >\r\n                                <option value=\"\" disabled={true}>Sub kategoriya tanlang</option>\r\n                                {state.categories?state.categories.map((category)=>\r\n                                    <option key={category.id} value={category.id}>{category.name}</option>\r\n                                )\r\n                                    :''\r\n                                }\r\n\r\n                            </AvField>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <button type=\"button\" onClick={() => openModal()} className=\"btn btn-danger\">\r\n                                Bekor qilish\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Saqlash</button>\r\n                        </ModalFooter>\r\n                    </AvForm>\r\n                </Modal>\r\n            ) ;\r\n\r\n\r\n        case '5':\r\n            return(\r\n                <Modal isOpen={state.showModal}\r\n                       toggle={() => openModal()}>\r\n                    <ModalHeader>{state.currentItem ? 'Tahrirlash' : 'Yangi produkt qoshish'}</ModalHeader>\r\n                    <AvForm onValidSubmit={saveOrEdit}>\r\n                        <ModalBody>\r\n                            <AvField\r\n                                name=\"name\"\r\n                                placeholder=\"Nomi\"\r\n                                defaultValue={state.currentItem ? state.currentItem.name : ''}\r\n                            />\r\n                            <AvField\r\n                                type=\"number\"\r\n                                name=\"incomePrice\"\r\n                                placeholder=\"income price\"\r\n                                defaultValue={state.currentItem ? state.currentItem.incomePrice : ''}\r\n                            />\r\n\r\n                            <AvField\r\n                                type=\"number\"\r\n                                name=\"salePrice\"\r\n                                placeholder=\"sale price\"\r\n                                defaultValue={state.currentItem ? state.currentItem.salePrice : ''}\r\n                            />\r\n\r\n                            <AvField\r\n                                type=\"number\"\r\n                                name=\"norma\"\r\n                                placeholder=\"norma\"\r\n                                defaultValue={state.currentItem ? state.currentItem.norma : ''}\r\n                            />\r\n                            {/*<AvField*/}\r\n                            {/*    name=\"description\"*/}\r\n                            {/*    placeholder=\"Sharh\"*/}\r\n                            {/*    defaultValue={state.currentItem?state.currentItem.description:''}*/}\r\n                            {/*/>*/}\r\n\r\n                            <AvField\r\n                                type=\"select\"\r\n                                name=\"categoryDto\"\r\n                                placeholder=\"Kategoriyani tanlang\"\r\n                                defaultValue={state.currentItem&&state.currentItem.categoryDto?state.currentItem.categoryDto.id:''}\r\n                            >\r\n                                <option value=\"\" disabled={true}>Kategoriyani tanlang</option>\r\n                                {state.categories?state.categories.map((category)=>\r\n                                    <option key={category.id} value={category.id}>{category.name}</option>\r\n                                )\r\n                                    :''\r\n\r\n                                }\r\n\r\n                            </AvField>\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <button type=\"button\" onClick={() => openModal()} className=\"btn btn-danger\">Bekor qilish\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Saqlash</button>\r\n                        </ModalFooter>\r\n                    </AvForm>\r\n                </Modal>\r\n            ) ;\r\n\r\n        default:\r\n            return ('')\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default AddEditModal;","import React from \"react\";\r\nimport {Modal, ModalFooter, ModalHeader} from \"reactstrap\";\r\n\r\nfunction RemoveModal(props){\r\n\r\n\r\n\r\n    return(\r\n        <Modal isOpen={props.showRemoveModal} toggle={props.closeRemoveModal}>\r\n            <ModalHeader>O'chirishni istaysizmi ?</ModalHeader>\r\n            <ModalFooter>\r\n                <button type=\"button\" onClick={props.closeRemoveModal}\r\n                        className=\"btn btn-danger\">Bekor qilish\r\n                </button>\r\n                <button type=\"button\" onClick={props.remove} className=\"btn btn-success\">Ha</button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default RemoveModal","import React from \"react\";\r\nimport {Col, Row, Table} from \"reactstrap\";\r\nimport AddEditModal from \"./AddEditModal\";\r\nimport RemoveModal from \"./RemoveModal\";\r\nimport {getRoleNameFromJWT} from \"../../utills/UsefullFunctions\";\r\n\r\nfunction catalogTable(props) {\r\n\r\n    return (\r\n\r\n        <Row>\r\n            <Col sm=\"12\">\r\n                <h4>{props.title}</h4>\r\n                {\r\n                    props.dataType === \"products\" && getRoleNameFromJWT()==='ROLE_MANAGER'?\r\n                        '':\r\n                        <button type=\"button\" className=\"btn btn-success\"\r\n                                onClick={() => props.openModal('')}>\r\n                            <AddEditModal state={props.state} saveOrEdit={props.saveOrEdit} openModal={props.openModal}\r\n                                          closeModal={props.closeModal}/>\r\n                            Add\r\n                        </button>\r\n                }\r\n\r\n                <Table striped>\r\n                    <thead>\r\n                    <tr>\r\n                        {props.names.map(item =>\r\n                            <th>{item}</th>\r\n                        )}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {props.datas &&\r\n                    props.datas.map((item, index) =>\r\n                        <tr>\r\n                            <th scope=\"row\">{index + 1 + (props.currentPage * 10)}</th>\r\n\r\n\r\n                            {\r\n                                props.dataType === 'users' ? [\r\n                                        <td>{item.firstName + \" \" + item.lastName}</td>,\r\n                                        <td>{item.phoneNumber}</td>,\r\n                                        <td>{item.username}</td>\r\n                                    ]\r\n                                    :\r\n                                    props.dataType === 'shops' ? [\r\n                                            <td>{item.name}</td>,\r\n                                            <td>{item.address}</td>,\r\n                                            // <td>{item.seller.firstName+\" \"+item.seller.lastName}</td>\r\n                                            <td>{item.seller ? item.seller.firstName + \" \" + item.seller.lastName : ''}</td>\r\n                                        ]\r\n                                        :\r\n                                        props.dataType === 'warehouses' ? [\r\n                                                <td>{item.name}</td>,\r\n                                                <td>{item.address}</td>,\r\n                                                <td>{item.shopDto ? item.shopDto.name : ''}</td>\r\n                                            ]\r\n                                            :\r\n                                            props.dataType === \"categories\" ? [\r\n                                                    <td>{item.name}</td>,\r\n                                                    // <td>{item.address}</td>,\r\n                                                    <td>{item.parentCategoryDto ? item.parentCategoryDto.name : ''}</td>\r\n                                                ]\r\n                                                :\r\n                                                props.dataType === \"products\" ?\r\n                                                    getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                                        [\r\n                                                            <td>{item.name}</td>,\r\n                                                            <td>{item.incomePrice}</td>,\r\n                                                            <td>{item.salePrice}</td>,\r\n                                                            <td>{item.norma}</td>,\r\n                                                            <td>{item.categoryDto ? item.categoryDto.name : ''}</td>\r\n                                                        ] :\r\n                                                        [\r\n                                                            <td>{item.name}</td>,\r\n                                                            <td>{item.salePrice}</td>,\r\n                                                            <td>{item.norma}</td>,\r\n                                                            <td>{item.categoryDto ? item.categoryDto.name : ''}</td>\r\n                                                        ]\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n\r\n                            <td>\r\n                                <div className=\"custom-control custom-switch\">\r\n                                    {props.dataType === \"users\" ?\r\n                                        item.roleName==='ROLE_DIRECTOR'?\r\n                                        '' :\r\n                                            [\r\n                                                <input type=\"checkbox\" className=\"custom-control-input\"\r\n                                                       id={item.name + item.id} checked={item.enable}\r\n                                                       onClick={() => props.changeActive(item.id, item.enable)}/>,\r\n                                                <label className=\"custom-control-label\"\r\n                                                       htmlFor={item.name + item.id}/>\r\n                                            ]\r\n                                        :\r\n\r\n                                        props.dataType === \"warehouses\" ? [\r\n\r\n                                                !item.shopDto ? [\r\n                                                        <input type=\"checkbox\" className=\"custom-control-input\"\r\n                                                               id={item.name + item.id} checked={item.active}\r\n                                                               onClick={() => props.changeWarehouseActive(item.id, item.active)}/>,\r\n                                                        <label className=\"custom-control-label\"\r\n                                                               htmlFor={item.name + item.id}/>\r\n                                                    ]\r\n                                                    : ''\r\n                                            ]\r\n                                            :\r\n                                            props.dataType === \"categories\" ?\r\n                                                ''\r\n                                                :\r\n\r\n\r\n                                                [\r\n                                                    <input type=\"checkbox\" className=\"custom-control-input\"\r\n                                                           id={item.name + item.id} checked={item.active}\r\n                                                           onClick={() => props.changeActive(item.id, item.active)}/>,\r\n                                                    <label className=\"custom-control-label\"\r\n                                                           htmlFor={item.name + item.id}/>\r\n                                                ]\r\n\r\n\r\n                                    }\r\n\r\n\r\n                                </div>\r\n                            </td>\r\n                            {\r\n                                getRoleNameFromJWT()==='ROLE_DIRECTOR'?\r\n                                    <td>\r\n                                        <button type=\"button\" className=\"btn btn-warning\"\r\n                                                onClick={() => props.openModal(item)}>Edit\r\n                                        </button>\r\n                                        {\r\n                                            item.roleName==='ROLE_DIRECTOR'?\r\n                                                '':\r\n                                                <button type=\"button\" className=\"btn btn-danger\"\r\n                                                        onClick={() => props.openRemoveModal(item)}\r\n\r\n                                                >\r\n                                                    <RemoveModal closeRemoveModal={props.closeRemoveModal}\r\n                                                                 showRemoveModal={props.state.showRemoveModal} remove={props.remove}/>\r\n                                                    Delete\r\n                                                </button>\r\n                                        }\r\n\r\n                                    </td>\r\n                                    :''\r\n                            }\r\n\r\n                        </tr>\r\n                    )}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default catalogTable","import React, {Component, useEffect, useState} from \"react\";\r\nimport CatalogTable from \"./CatalogTable\";\r\nimport {TabPane} from \"reactstrap\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../utills/constants\";\r\nimport {apiPath} from \"../../apiPath/apiPath\";\r\nimport {configHeader} from \"../../utills/congifHeader\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default class UserPane extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: '1',\r\n            showModal: false,\r\n            showRemoveModal: false,\r\n            currentItem: '',\r\n            users: [],\r\n            totalElements: 0,\r\n            currentPage: 0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allUsers().then(res=>{\r\n            console.log(res,\"RES USER PANE\")\r\n            if (res){\r\n                this.setState({\r\n                    users:res.object,\r\n                    totalElements:res.totalElements,\r\n                    currentPage:res.currentPage,\r\n                    currentItem:''\r\n                })\r\n            }\r\n\r\n\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const openModal = item => {\r\n            this.setState({currentItem: item,showModal: !this.state.showModal})\r\n            // return AddEditModal({state:this.state, setState:this.setState,saveOrEdit:saveOrEdit})\r\n        }\r\n        const closeModal=()=>{\r\n            this.setState({\r\n                currentItem: '',\r\n                showModal: false\r\n            })\r\n        }\r\n\r\n        const openRemoveModal=(item)=>{\r\n            this.setState({\r\n                showRemoveModal: true,\r\n                currentItem: item\r\n            })\r\n        }\r\n\r\n        const closeRemoveModal=()=>{\r\n            this.setState({\r\n                showRemoveModal: false,\r\n                currentItem: ''\r\n            })\r\n        }\r\n\r\n\r\n        const saveOrEdit = (e, v) => {\r\n            if (this.state.currentItem){\r\n                v={...v,id:this.state.currentItem.id}\r\n                if (v.password){\r\n\r\n                }else{\r\n                    v.password=null\r\n                }\r\n            }\r\n            console.log(v,'vvvvvvvvvvvv')\r\n\r\n            AdminRequests.saveOrEditUser(v)\r\n                .then(res=>{\r\n\r\n                    AdminRequests.allUsers().then(res=>{\r\n                        this.setState({\r\n                            users:res.object,\r\n                            totalElements:res.object.totalElements,\r\n                            currentPage:res.object.currentPage,\r\n                            currentItem:''\r\n                        })\r\n                    })\r\n                    closeModal()\r\n                }).\r\n            catch(err=>{\r\n                    closeModal()\r\n            })\r\n\r\n        }\r\n\r\n        const set=(state)=> {\r\n            this.setState(state)\r\n        }\r\n\r\n        const changeActive=(id,enable)=>{\r\n\r\n            AdminRequests.changeUserActive(id,enable)\r\n                .then(res=>{\r\n                    if (enable){\r\n                        toast.warning(\"Blocked\")\r\n                    }\r\n                    else {\r\n                        toast.success(\"Activate\")\r\n                    }\r\n                    let users=this.state.users;\r\n                    for (let i = 0; i < users.length; i++) {\r\n                        if (users[i].id===id){\r\n                            users[i].enable=!users[i].enable;\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        users:users\r\n                    })\r\n\r\n                })\r\n\r\n        }\r\n\r\n        const remove=()=>{\r\n            AdminRequests.removeUser(this.state.currentItem.id)\r\n                .then(res=>{\r\n                    if (res){\r\n                        this.setState({\r\n                            users:this.state.users.filter(item=>item.id!==this.state.currentItem.id)\r\n                        })\r\n                    }\r\n                    closeRemoveModal()\r\n                })\r\n                .catch(error=>{\r\n                    closeRemoveModal()\r\n                })\r\n        }\r\n\r\n        return(\r\n            <TabPane tabId={this.props.tabId}>\r\n                <CatalogTable state={this.state}\r\n                              title={\"Hodimlar Ro'yxati\"}\r\n                              currentPage={0}\r\n                              set={set}\r\n                              names={\r\n                                  [\"T/R\", \"FIO\", \"Phone Number\", \"Login\", \"Active\", \"Actions\"]\r\n                              }\r\n                              dataType={\"users\"}\r\n                              datas={this.state.users}\r\n                              changeActive={changeActive}\r\n                              openModal={openModal}\r\n                              closeModal={closeModal}\r\n                              openRemoveModal={openRemoveModal}\r\n                              closeRemoveModal={closeRemoveModal}\r\n                              saveOrEdit={saveOrEdit}\r\n                              remove={remove}\r\n                />\r\n            </TabPane>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, {Component, useEffect, useState} from \"react\";\r\nimport CatalogTable from \"./CatalogTable\";\r\nimport {TabPane} from \"reactstrap\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../utills/constants\";\r\nimport {apiPath} from \"../../apiPath/apiPath\";\r\nimport {configHeader} from \"../../utills/congifHeader\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default class ShopPane extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: '2',\r\n            showModal: false,\r\n            showRemoveModal: false,\r\n            currentItem: '',\r\n            shops: [],\r\n            sellers:[],\r\n            totalElements: 0,\r\n            currentPage: 0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allShops().then(res=>{\r\n            this.setState({\r\n                shops:res.object,\r\n                totalElements:res.totalElements,\r\n                currentPage:res.currentPage,\r\n                currentItem:''\r\n            })\r\n        })\r\n\r\n        AdminRequests.allUsersByRoleSeller().then(res=>{\r\n            this.setState({\r\n                sellers:res!=null?res.object:[],\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const openModal = item => {\r\n            console.log(item, \"ITEM\")\r\n            this.setState({currentItem: item,showModal: !this.state.showModal})\r\n            // return AddEditModal({state:this.state, setState:this.setState,saveOrEdit:saveOrEdit})\r\n        }\r\n        const closeModal=()=>{\r\n            this.setState({\r\n                currentItem: '',\r\n                showModal: false\r\n            })\r\n        }\r\n\r\n        const openRemoveModal=(item)=>{\r\n            this.setState({\r\n                showRemoveModal: true,\r\n                currentItem: item\r\n            })\r\n        }\r\n\r\n        const closeRemoveModal=()=>{\r\n            this.setState({\r\n                showRemoveModal: false,\r\n                currentItem: ''\r\n            })\r\n        }\r\n\r\n\r\n        const saveOrEdit = (e, v) => {\r\n            if (this.state.currentItem){\r\n                v={...v,id:this.state.currentItem.id}\r\n            }\r\n            if (v.seller==='') v.seller=undefined\r\n\r\n            for (let i=0; i<this.state.sellers.length; i++){\r\n                if (this.state.sellers[i].id===v.seller){\r\n                    v.seller=this.state.sellers[i];\r\n                    break;\r\n                }\r\n            }\r\n            AdminRequests.saveOrEditShop(v)\r\n                .then(res=>{\r\n                    AdminRequests.allShops().then(res=>{\r\n                        this.setState({\r\n                            shops:res.object,\r\n                            totalElements:res.totalElements,\r\n                            currentPage:res.currentPage,\r\n                            currentItem:''\r\n                        })\r\n                    })\r\n                    closeModal()\r\n                }).\r\n            catch(err=>{\r\n                closeModal()\r\n            })\r\n\r\n        }\r\n\r\n        const set=(state)=> {\r\n            this.setState(state)\r\n        }\r\n\r\n        const changeActive=(id,active)=>{\r\n            console.log(id,'IDDDDD')\r\n\r\n            AdminRequests.changeShopActive(id,active)\r\n                .then(res=>{\r\n                    if (active){\r\n                        toast.warning(\"Blocked\")\r\n                    }\r\n                    else {\r\n                        toast.success(\"Activate\")\r\n                    }\r\n                    let shops=this.state.shops;\r\n                    for (let i = 0; i < shops.length; i++) {\r\n                        if (shops[i].id===id){\r\n                            shops[i].active=!shops[i].active;\r\n                        }\r\n                    }\r\n                    console.log(shops)\r\n                    console.log(this.state.shops)\r\n                    this.setState({\r\n                        shops:shops\r\n                    })\r\n\r\n                })\r\n\r\n        }\r\n\r\n        const remove=()=>{\r\n            AdminRequests.removeShop(this.state.currentItem.id)\r\n                .then(res=>{\r\n                    if (res){\r\n                        this.setState({\r\n                            shops:this.state.shops.filter(item=>item.id!=this.state.currentItem.id)\r\n                        })\r\n                    }\r\n\r\n                    closeRemoveModal()\r\n                    console.log(this.state.currentItem,\"RRRRRRRRRRRRRRRAAAA\")\r\n                })\r\n                .catch(error=>{\r\n                    closeRemoveModal()\r\n                })\r\n        }\r\n\r\n        return(\r\n            <TabPane tabId={this.props.tabId}>\r\n                <CatalogTable state={this.state}\r\n                              title={\"Magazinlar\"}\r\n                              set={set}\r\n                              names={\r\n                                  [\"T/R\", \"name\", \"address\", \"seller\", \"Active\", \"Actions\"]\r\n                              }\r\n                              currentPage={0}\r\n                              dataType={\"shops\"}\r\n                              datas={this.state.shops}\r\n                              changeActive={changeActive}\r\n                              openModal={openModal}\r\n                              closeModal={closeModal}\r\n                              openRemoveModal={openRemoveModal}\r\n                              closeRemoveModal={closeRemoveModal}\r\n                              saveOrEdit={saveOrEdit}\r\n                              remove={remove}\r\n                />\r\n            </TabPane>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, {Component, useEffect, useState} from \"react\";\r\nimport CatalogTable from \"./CatalogTable\";\r\nimport {TabPane} from \"reactstrap\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../utills/constants\";\r\nimport {apiPath} from \"../../apiPath/apiPath\";\r\nimport {configHeader} from \"../../utills/congifHeader\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default class WarehousePane extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: '3',\r\n            showModal: false,\r\n            showRemoveModal: false,\r\n            currentItem: '',\r\n            warehouses: [],\r\n            totalElements: 0,\r\n            currentPage: 0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allWarehouses().then(res=>{\r\n            this.setState({\r\n                warehouses:res.object,\r\n                totalElements:res.totalElements,\r\n                currentPage:res.currentPage,\r\n                currentItem:''\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const openModal = item => {\r\n            this.setState({currentItem: item,showModal: !this.state.showModal})\r\n            // return AddEditModal({state:this.state, setState:this.setState,saveOrEdit:saveOrEdit})\r\n        }\r\n        const closeModal=()=>{\r\n            this.setState({\r\n                currentItem: '',\r\n                showModal: false\r\n            })\r\n        }\r\n\r\n        const openRemoveModal=(item)=>{\r\n            this.setState({\r\n                showRemoveModal: true,\r\n                currentItem: item\r\n            })\r\n        }\r\n\r\n        const closeRemoveModal=()=>{\r\n            this.setState({\r\n                showRemoveModal: false,\r\n                currentItem: ''\r\n            })\r\n        }\r\n\r\n\r\n        const saveOrEdit = (e, v) => {\r\n            if (this.state.currentItem){\r\n                v={...v,id:this.state.currentItem.id}\r\n            }\r\n\r\n            AdminRequests.saveOrEditWarehouse(v)\r\n                .then(res=>{\r\n                    AdminRequests.allWarehouses().then(res=>{\r\n                        this.setState({\r\n                            warehouses:res.object,\r\n                            totalElements:res.totalElements,\r\n                            currentPage:res.currentPage,\r\n                            currentItem:''\r\n                        })\r\n                    })\r\n                    closeModal()\r\n                }).\r\n            catch(err=>{\r\n                closeModal()\r\n            })\r\n\r\n        }\r\n\r\n        const set=(state)=> {\r\n            this.setState(state)\r\n        }\r\n\r\n        const changeWarehouseActive=(id,active)=>{\r\n\r\n            AdminRequests.changeWarehouseActive(id,active)\r\n                .then(res=>{\r\n                    if (active){\r\n                        toast.warning(\"Blocked\")\r\n                    }\r\n                    else {\r\n                        toast.success(\"Activate\")\r\n                    }\r\n                    AdminRequests.allWarehouses().then(res=>{\r\n                        this.setState({\r\n                            warehouses:res.object,\r\n                            totalElements:res.totalElements,\r\n                            currentPage:res.currentPage,\r\n                            currentItem:''\r\n                        })\r\n                    })\r\n\r\n                })\r\n\r\n        }\r\n\r\n        const remove=()=>{\r\n            AdminRequests.removeWarehouse(this.state.currentItem.id)\r\n                .then(res=>{\r\n                    if (res){\r\n                        this.setState({\r\n                            warehouses:this.state.warehouses.filter(item=>item.id!=this.state.currentItem.id)\r\n                        })\r\n                    }\r\n\r\n                    closeRemoveModal()\r\n                })\r\n                .catch(error=>{\r\n                    closeRemoveModal()\r\n                })\r\n        }\r\n\r\n        return(\r\n            <TabPane tabId={this.props.tabId}>\r\n                <CatalogTable state={this.state}\r\n                              title={\"Omborlar\"}\r\n                              set={set}\r\n                              names={\r\n                                  [\"T/R\", \"name\", \"address\", \"shop\", \"Active\", \"Actions\"]\r\n                              }\r\n                              currentPage={0}\r\n                              dataType={\"warehouses\"}\r\n                              datas={this.state.warehouses}\r\n                              changeActive={changeWarehouseActive}\r\n                              changeWarehouseActive={changeWarehouseActive}\r\n                              openModal={openModal}\r\n                              closeModal={closeModal}\r\n                              openRemoveModal={openRemoveModal}\r\n                              closeRemoveModal={closeRemoveModal}\r\n                              saveOrEdit={saveOrEdit}\r\n                              remove={remove}\r\n                />\r\n            </TabPane>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, {Component, useEffect, useState} from \"react\";\r\nimport CatalogTable from \"./CatalogTable\";\r\nimport {TabPane} from \"reactstrap\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../utills/constants\";\r\nimport {apiPath} from \"../../apiPath/apiPath\";\r\nimport {configHeader} from \"../../utills/congifHeader\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default class CategoryPane extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: '4',\r\n            showModal: false,\r\n            showRemoveModal: false,\r\n            currentItem: '',\r\n            categories: [],\r\n            sellers:[],\r\n            totalElements: 0,\r\n            currentPage: 0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allCategories().then(res=>{\r\n            this.setState({\r\n                categories:res.object,\r\n                totalElements:res.totalElements,\r\n                currentPage:res.currentPage,\r\n                currentItem:''\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const openModal = item => {\r\n            this.setState({currentItem: item,showModal: !this.state.showModal})\r\n            // return AddEditModal({state:this.state, setState:this.setState,saveOrEdit:saveOrEdit})\r\n        }\r\n        const closeModal=()=>{\r\n            this.setState({\r\n                currentItem: '',\r\n                showModal: false\r\n            })\r\n        }\r\n\r\n        const openRemoveModal=(item)=>{\r\n            this.setState({\r\n                showRemoveModal: true,\r\n                currentItem: item\r\n            })\r\n        }\r\n\r\n        const closeRemoveModal=()=>{\r\n            this.setState({\r\n                showRemoveModal: false,\r\n                currentItem: ''\r\n            })\r\n        }\r\n\r\n\r\n        const saveOrEdit = (e, v) => {\r\n            if (this.state.currentItem){\r\n                v={...v,id:this.state.currentItem.id}\r\n            }\r\n            if (v.parentCategoryDto==='') v.parentCategoryDto=undefined\r\n            console.log(this.state.categories)\r\n            console.log(v.parentCategoryDto)\r\n            console.log(this.state.categories.length,\"length\")\r\n            // console.log(this.state.categories)\r\n            if (v.parentCategoryDto!=null){\r\n                for (let i=0; i<this.state.categories.length; i++){\r\n                    if (this.state.categories[i].id==v.parentCategoryDto){\r\n                        v.parentCategoryDto=this.state.categories[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n            AdminRequests.saveOrEditCategory(v)\r\n                .then(res=>{\r\n                    AdminRequests.allCategories().then(res=>{\r\n                        this.setState({\r\n                            categories:res.object,\r\n                            totalElements:res.totalElements,\r\n                            currentPage:res.currentPage,\r\n                            currentItem:''\r\n                        })\r\n                    })\r\n                    closeModal()\r\n                }).\r\n            catch(err=>{\r\n                closeModal()\r\n            })\r\n\r\n\r\n        }\r\n\r\n        const set=(state)=> {\r\n            this.setState(state)\r\n        }\r\n\r\n\r\n        const remove=()=>{\r\n            AdminRequests.removeCategory(this.state.currentItem.id)\r\n                .then(res=>{\r\n                    AdminRequests.allCategories().then(ress=>{\r\n                        this.setState({\r\n                            categories:ress.object,\r\n                            totalElements:ress.totalElements,\r\n                            currentPage:ress.currentPage,\r\n                            currentItem:''\r\n                        })\r\n                    })\r\n\r\n                    closeRemoveModal()\r\n                })\r\n                .catch(error=>{\r\n                    closeRemoveModal()\r\n                })\r\n        }\r\n\r\n        return(\r\n            <TabPane tabId={this.props.tabId}>\r\n                <CatalogTable state={this.state}\r\n                              title={\"Kategoriyalar\"}\r\n                              set={set}\r\n                              names={\r\n                                  [\"T/R\", \"Nomi\", \"Tegishli\", \"Actions\"]\r\n                              }\r\n                              currentPage={0}\r\n                              dataType={\"categories\"}\r\n                              datas={this.state.categories}\r\n                              openModal={openModal}\r\n                              closeModal={closeModal}\r\n                              openRemoveModal={openRemoveModal}\r\n                              closeRemoveModal={closeRemoveModal}\r\n                              saveOrEdit={saveOrEdit}\r\n                              remove={remove}\r\n                />\r\n            </TabPane>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, {Component, useEffect, useState} from \"react\";\r\nimport CatalogTable from \"./CatalogTable\";\r\nimport {TabPane} from \"reactstrap\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../utills/constants\";\r\nimport {apiPath} from \"../../apiPath/apiPath\";\r\nimport {configHeader} from \"../../utills/congifHeader\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getRoleNameFromJWT} from \"../../utills/UsefullFunctions\";\r\n\r\nexport default class ProductPane extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: '5',\r\n            showModal: false,\r\n            showRemoveModal: false,\r\n            currentItem: '',\r\n            products: [],\r\n            categories:[],\r\n            totalElements: 0,\r\n            currentPage: 0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allProduct().then(res=>{\r\n            this.setState({\r\n                products:res.object,\r\n                totalElements:res.object.totalElements,\r\n                currentPage:res.object.currentPage,\r\n                currentItem:''\r\n            })\r\n        })\r\n            .catch(err=>{\r\n                this.setState({\r\n                    totalElements:0,\r\n                    currentPage:0,\r\n                    currentItem:''\r\n                })\r\n            })\r\n\r\n        AdminRequests.allCategories().then(res=>{\r\n            this.setState({\r\n                categories:res.object,\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const openModal = item => {\r\n            AdminRequests.allCategories().then(res=>{\r\n                this.setState({\r\n                    categories:res.object,\r\n                    currentItem: item,\r\n                    showModal: !this.state.showModal\r\n                })\r\n            })\r\n            // this.setState({currentItem: item,showModal: !this.state.showModal})\r\n            // return AddEditModal({state:this.state, setState:this.setState,saveOrEdit:saveOrEdit})\r\n        }\r\n        const closeModal=()=>{\r\n            this.setState({\r\n                currentItem: '',\r\n                showModal: false\r\n            })\r\n        }\r\n\r\n        const openRemoveModal=(item)=>{\r\n            this.setState({\r\n                showRemoveModal: true,\r\n                currentItem: item\r\n            })\r\n        }\r\n\r\n        const closeRemoveModal=()=>{\r\n            this.setState({\r\n                showRemoveModal: false,\r\n                currentItem: ''\r\n            })\r\n        }\r\n\r\n\r\n        const saveOrEdit = (e, v) => {\r\n            if (this.state.currentItem){\r\n                v={...v,id:this.state.currentItem.id}\r\n            }\r\n\r\n            if (v.categoryDto){\r\n                for (let i=0; i<this.state.categories.length; i++){\r\n                    if (this.state.categories[i].id==v.categoryDto){\r\n                        v.categoryDto=this.state.categories[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (v.categoryDto == '') v.categoryDto=null\r\n            AdminRequests.saveOrEditProduct(v)\r\n                .then(res=>{\r\n                    AdminRequests.allProduct().then(res=>{\r\n                        this.setState({\r\n                            products:res.object,\r\n                            totalElements:res.object.totalElements,\r\n                            currentPage:res.object.currentPage,\r\n                            currentItem:''\r\n                        })\r\n                    })\r\n                        .catch(err=>{\r\n                            this.setState({\r\n                                totalElements:0\r\n                            })\r\n                        })\r\n                    closeModal()\r\n                }).\r\n            catch(err=>{\r\n                closeModal()\r\n            })\r\n\r\n        }\r\n\r\n        const set=(state)=> {\r\n            this.setState(state)\r\n        }\r\n\r\n        const changeActive=(id,active)=>{\r\n\r\n            AdminRequests.changeProductActive(id,active)\r\n                .then(res=>{\r\n                    if (active){\r\n                        toast.warning(\"Blocked\")\r\n                    }\r\n                    else {\r\n                        toast.success(\"Activate\")\r\n                    }\r\n                    let products=this.state.products;\r\n                    for (let i = 0; i < products.length; i++) {\r\n                        if (products[i].id===id){\r\n                            products[i].active=!products[i].active;\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        products:products\r\n                    })\r\n\r\n                })\r\n\r\n        }\r\n\r\n        const remove=()=>{\r\n            AdminRequests.removeProduct(this.state.currentItem.id)\r\n                .then(res=>{\r\n                    if (res){\r\n                        this.setState({\r\n                            products:this.state.products.filter(item=>item.id!=this.state.currentItem.id)\r\n                        })\r\n                    }\r\n\r\n                    closeRemoveModal()\r\n                })\r\n                .catch(error=>{\r\n                    closeRemoveModal()\r\n                })\r\n        }\r\n\r\n        return(\r\n            <TabPane tabId={this.props.tabId}>\r\n                <CatalogTable state={this.state}\r\n                              title={\"Produktlar\"}\r\n                              set={set}\r\n                              names={ getRoleNameFromJWT()==='ROLE_DIRECTOR'?\r\n                                  [\"T/R\", \"name\", \"incomePrice\", \"salePrice\", \"norma\",\"kategoriya\", \"Active\", \"Actions\"]\r\n                                  :[\"T/R\", \"name\", \"salePrice\", \"norma\",\"kategoriya\", \"Active\", \"Actions\"]\r\n                              }\r\n                              currentPage={0}\r\n                              dataType={\"products\"}\r\n                              datas={this.state.products}\r\n                              changeActive={changeActive}\r\n                              openModal={openModal}\r\n                              closeModal={closeModal}\r\n                              openRemoveModal={openRemoveModal}\r\n                              closeRemoveModal={closeRemoveModal}\r\n                              saveOrEdit={saveOrEdit}\r\n                              remove={remove}\r\n                />\r\n            </TabPane>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, {Component} from 'react';\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {getRoleNameFromJWT} from \"../../utills/UsefullFunctions\";\r\nimport AdminRequests from \"../catalog_components/AdminRequests\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport Pagination from \"react-js-pagination\";\r\nimport DatePicker from \"react-datepicker\";\r\n// import \"bootstrap/less/bootstrap.less\";\r\n\r\nclass WarehouseIncome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            item: '',\r\n            warehouses: [],\r\n            products: [],\r\n            pwa: [\r\n                {\r\n                    id: '',\r\n                    productDto: '',\r\n                    amount: 0\r\n                }\r\n            ],\r\n            accepted: false,\r\n            toWarehouseId: 0,\r\n            fromWarehouseId: 0,\r\n            incomeList: [],\r\n            totalElements: 0,\r\n            totalPages: 0,\r\n            currentPage: 0,\r\n            size: 10,\r\n            acceptedIncomeId: '',\r\n            showAcceptModal: false,\r\n            removeIncomeId: '',\r\n            showRemoveModal: false,\r\n            showItemModal: false,\r\n            startDate:'',\r\n            endDate:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allWarehouseWithoutPageable().then(res => {\r\n            console.log(res, \"allALL\")\r\n            this.setState({warehouses: res})\r\n        })\r\n        AdminRequests.getWarehouseIncomeByApprove({\r\n            accepted: this.state.accepted,\r\n            income: true,\r\n            fromWarehouseId: this.state.fromWarehouseId,\r\n            toWarehouseId: this.state.toWarehouseId,\r\n            page: this.state.currentPage,\r\n            size: this.state.size,\r\n            startDate:'',\r\n            endDate:''\r\n        }).then(res => {\r\n            console.log(res, \"RESRESRESRES===INCOMES\")\r\n            this.setState(\r\n                {\r\n                    incomeList: res.object,\r\n                    totalElements: res.totalElements,\r\n                    totalPages: res.totalPages\r\n                })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const getByApproved = (e) => {\r\n            console.log(e.target.value, 'APPROVED')\r\n            AdminRequests.getWarehouseIncomeByApprove({\r\n                accepted: !this.state.accepted,\r\n                income: true,\r\n                fromWarehouseId: 0,\r\n                toWarehouseId: this.state.toWarehouseId,\r\n                page: 0,\r\n                size: this.state.size,\r\n                startDate:this.state.startDate,\r\n                endDate:this.state.endDate\r\n            }).then(res => {\r\n                console.log(res, \"RESRESRESRES===INCOMES\")\r\n                this.setState(\r\n                    {\r\n                        incomeList: res.object,\r\n                        totalElements: res.totalElements,\r\n                        totalPages: res.totalPages,\r\n                        accepted: !this.state.accepted,\r\n                        currentPage:0\r\n                    })\r\n            })\r\n        }\r\n        const openModal = (item) => {\r\n            AdminRequests.allWarehouseWithoutPageable().then(res => {\r\n                console.log(res, \"allALL\")\r\n                this.setState({\r\n                    warehouses: res,\r\n                    showModal: !this.state.showModal,\r\n                    item: item\r\n                })\r\n            })\r\n        }\r\n        const saveOrEdit = (e, v) => {\r\n            e.preventDefault()\r\n            console.log(v, 'VVVVVVVVVVVVVVVVVVVVVVV')\r\n            let req = {\r\n                toWarehouseDto: {\r\n                    id: v.toWarehouseId\r\n                },\r\n                productWithAmountDtos: this.state.pwa\r\n            }\r\n            console.log(req, 'REQTRANSFER')\r\n            AdminRequests.saveOrEditTransfer(req).then(response => {\r\n                AdminRequests.getWarehouseIncomeByApprove({\r\n                    accepted: this.state.accepted,\r\n                    income: true,\r\n                    fromWarehouseId: 0,\r\n                    toWarehouseId: 0,\r\n                    page: this.state.currentPage,\r\n                    size: this.state.size,\r\n                    startDate:this.state.startDate,\r\n                    endDate:this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, \"RESRESRESRES===INCOMES\")\r\n                    this.setState(\r\n                        {\r\n                            incomeList: res.object,\r\n                            totalElements: res.totalElements,\r\n                            totalPages: res.totalPages,\r\n                            showModal: !this.state.showModal,\r\n                            item: '',\r\n                            pwa: [],\r\n                            products: []\r\n                        })\r\n                })\r\n            })\r\n        }\r\n        const getProdId = (val) => {\r\n            AdminRequests.searchProduct(val).then(res => {\r\n                console.log(res, 'RESSEarchProduct')\r\n                this.setState({products: res})\r\n            })\r\n        }\r\n        const filterColors = (inputValue) => {\r\n            if (inputValue) {\r\n                return this.state.products.filter(i =>\r\n                    i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n                );\r\n            }\r\n        };\r\n        const loadOptions = (inputValue, callback) => {\r\n            setTimeout(() => {\r\n                callback(filterColors(inputValue));\r\n            }, 1000);\r\n        };\r\n        const handleChange = (e, index) => {\r\n            console.log(e, \"PRODVVVVVVVVVVVVVVVV\")\r\n            console.log(index, \"PRODIIIIIIIIIIIIIIIIII\")\r\n            let tempArr = this.state.pwa\r\n            tempArr[index].productDto = e\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        const getAmount = (e, index) => {\r\n            console.log(e.target.value, \"AMOUNTVVVVVVVVVVVVVVVV\")\r\n            console.log(index, \"AMOUNTIIIIIIIIIIIIIIIIII\")\r\n            let tempArr = this.state.pwa\r\n            tempArr[index].amount = e.target.value\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        const removeItem = (item, index) => {\r\n            console.log(item, 'ITEMMMMMMMMM')\r\n            console.log(index, \"INDEXXXXXXX\")\r\n            let tempArr = this.state.pwa\r\n            tempArr.splice(index, 1);\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        const addToArray = () => {\r\n            let tempArr = this.state.pwa\r\n            let s = {\r\n                id: '',\r\n                productDto: '',\r\n                amount: 0\r\n            }\r\n            console.log(s, \"SSSSSSSSS\")\r\n            tempArr.push(s)\r\n            console.log(tempArr, \"TEMPARR\")\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        const getByToWarehouse = (e) => {\r\n            let s = e.target.value;\r\n            AdminRequests.getWarehouseIncomeByApprove({\r\n                accepted: this.state.accepted,\r\n                income: true,\r\n                fromWarehouseId: this.state.fromWarehouseId,\r\n                toWarehouseId: s,\r\n                page: 0,\r\n                size: this.state.size,\r\n                startDate:this.state.startDate,\r\n                endDate:this.state.endDate\r\n            }).then(res => {\r\n                console.log(res, \"RESRESRESRES===INCOMES\")\r\n                this.setState(\r\n                    {\r\n                        incomeList: res.object,\r\n                        totalElements: res.totalElements,\r\n                        totalPages: res.totalPages,\r\n                        toWarehouseId: s,\r\n                        currentPage:0\r\n                    })\r\n            })\r\n        }\r\n        const openAcceptModal = (id) => {\r\n            this.setState(\r\n                {\r\n                    showAcceptModal: !this.state.showAcceptModal,\r\n                    acceptedIncomeId: id\r\n                })\r\n\r\n        }\r\n        const accept = () => {\r\n            AdminRequests.acceptWarehouseIncome(this.state.acceptedIncomeId).then(response => {\r\n                AdminRequests.getWarehouseIncomeByApprove({\r\n                    accepted: this.state.accepted,\r\n                    income: true,\r\n                    fromWarehouseId: this.state.fromWarehouseId,\r\n                    toWarehouseId: this.state.toWarehouseId,\r\n                    page: this.state.currentPage,\r\n                    size: this.state.size,\r\n                    startDate:this.state.startDate,\r\n                    endDate:this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, \"RESRESRESRES===INCOMES\")\r\n                    this.setState(\r\n                        {\r\n                            incomeList: res.object,\r\n                            totalElements: res.totalElements,\r\n                            totalPages: res.totalPages,\r\n                            showAcceptModal: !this.state.showAcceptModal,\r\n                            acceptedIncomeId: ''\r\n                        })\r\n                })\r\n            })\r\n        }\r\n        const openRemoveModal = (id) => {\r\n            this.setState(\r\n                {\r\n                    showRemoveModal: !this.state.showRemoveModal,\r\n                    removeIncomeId: id\r\n                })\r\n\r\n        }\r\n        const remove = () => {\r\n            AdminRequests.removeWarehouseIncome(this.state.removeIncomeId).then(response => {\r\n                AdminRequests.getWarehouseIncomeByApprove({\r\n                    accepted: this.state.accepted,\r\n                    income: true,\r\n                    fromWarehouseId: this.state.fromWarehouseId,\r\n                    toWarehouseId: this.state.toWarehouseId,\r\n                    page: this.state.currentPage,\r\n                    size: this.state.size,\r\n                    startDate:this.state.startDate,\r\n                    endDate:this.state.endDate\r\n                })\r\n                    .then(res => {\r\n                    console.log(res, \"RESRESRESRES===INCOMES\")\r\n                    this.setState(\r\n                        {\r\n                            incomeList: res.object,\r\n                            totalElements: res.totalElements,\r\n                            totalPages: res.totalPages,\r\n                            showRemoveModal: !this.state.showRemoveModal,\r\n                            removeIncomeId: ''\r\n                        })\r\n                })\r\n            })\r\n        }\r\n        const openPwaListModal=(item)=>{\r\n            console.log(item,'ITEM TO SHOW PWA')\r\n            this.setState({\r\n                item,\r\n                showItemModal:!this.state.showItemModal\r\n            })\r\n        }\r\n        const handlePageChange=(pageNumber)=>{\r\n            console.log(`active page is ${pageNumber}`);\r\n            AdminRequests.getWarehouseIncomeByApprove({\r\n                accepted: this.state.accepted,\r\n                income: true,\r\n                fromWarehouseId: this.state.fromWarehouseId,\r\n                toWarehouseId: this.state.toWarehouseId,\r\n                page: pageNumber-1,\r\n                size: this.state.size,\r\n                startDate:this.state.startDate,\r\n                endDate:this.state.endDate\r\n            })\r\n                .then(res => {\r\n                    console.log(res, \"RESRESRESRES===INCOMES\")\r\n                    this.setState(\r\n                        {\r\n                            incomeList: res.object,\r\n                            totalElements: res.totalElements,\r\n                            totalPages: res.totalPages,\r\n                            currentPage: pageNumber-1\r\n                        })\r\n                })\r\n        }\r\n        const getStartDate = (startDate) => {\r\n            if (this.state.endDate) {\r\n                AdminRequests.getWarehouseIncomeByApprove({\r\n                    accepted: this.state.accepted,\r\n                    income: true,\r\n                    fromWarehouseId: this.state.fromWarehouseId,\r\n                    toWarehouseId: this.state.toWarehouseId,\r\n                    page: 0,\r\n                    size: this.state.size,\r\n                    startDate,\r\n                    endDate:this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, \"RESRESRESRES===INCOMES\")\r\n                    this.setState(\r\n                        {\r\n                            incomeList: res.object,\r\n                            totalElements: res.totalElements,\r\n                            totalPages: res.totalPages,\r\n                            startDate\r\n                        })\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    startDate\r\n                })\r\n            }\r\n        }\r\n        const getEndDate = (endDate) => {\r\n            AdminRequests.getWarehouseIncomeByApprove({\r\n                accepted: this.state.accepted,\r\n                income: true,\r\n                fromWarehouseId: this.state.fromWarehouseId,\r\n                toWarehouseId: this.state.toWarehouseId,\r\n                page: 0,\r\n                size: this.state.size,\r\n                startDate:this.state.startDate,\r\n                endDate\r\n            }).then(res => {\r\n                console.log(res, \"RESRESRESRES===INCOMES\")\r\n                this.setState(\r\n                    {\r\n                        incomeList: res.object,\r\n                        totalElements: res.totalElements,\r\n                        totalPages: res.totalPages,\r\n                        endDate\r\n                    })\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"mt-4\">\r\n                {getRoleNameFromJWT() === 'ROLE_DIRECTOR' || getRoleNameFromJWT() === 'ROLE_MANAGER' ?\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <button type=\"button\" className=\"btn btn-success ml-5 mr-5\" onClick={() => openModal('')}> Kirim qilish\r\n                            </button>\r\n                            <select name=\"warehouse\" id=\"warehouse\" onChange={getByToWarehouse}>\r\n                                <option value={0}>Barcha Omborlar :</option>\r\n                                {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                    <option value={item.id}>{item.name}</option>\r\n                                )}\r\n                            </select>\r\n                            <label htmlFor=\"accepted\" className=\"ml-5\">Tasdiqlangam:</label>\r\n                            <input id=\"accepted\" type=\"checkbox\" checked={this.state.accepted} onChange={getByApproved}\r\n                                   className=\"ml-2\"/>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <DatePicker\r\n                                selected={this.state.startDate}\r\n                                onChange={(date) => getStartDate(date)}\r\n                                selectsStart\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                            />\r\n                            <DatePicker\r\n                                selected={this.state.endDate}\r\n                                onChange={(date) => getEndDate(date)}\r\n                                selectsEnd\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                minDate={this.state.startDate}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Pagination\r\n                                activePage={this.state.currentPage+1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    :\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor=\"accepted\" className=\"ml-5\">Tasdiqlangam:</label>\r\n                            <input id=\"accepted\" type=\"checkbox\" checked={this.state.accepted} onChange={getByApproved}\r\n                                   className=\"ml-2\"/>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <DatePicker\r\n                                selected={this.state.startDate}\r\n                                onChange={(date) => getStartDate(date)}\r\n                                selectsStart\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                            />\r\n                            <DatePicker\r\n                                selected={this.state.endDate}\r\n                                onChange={(date) => getEndDate(date)}\r\n                                selectsEnd\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                minDate={this.state.startDate}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Pagination\r\n                                activePage={this.state.currentPage+1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <Table>\r\n                    <tr>\r\n                        <th>T/R</th>\r\n                        <th>Qayerga</th>\r\n                        <th>Qachon</th>\r\n                        <th>Kim</th>\r\n                        <th>Qayerdan</th>\r\n                        <th>Tasdiqlangan</th>\r\n                        <th>Nimalar</th>\r\n                        {getRoleNameFromJWT() === 'ROLE_SELLER' ?\r\n                            ''\r\n                            :\r\n                            this.state.accepted?'':\r\n                            <th>Amallar</th>\r\n                        }\r\n                    </tr>\r\n                    {this.state.incomeList && this.state.incomeList.map((item, index) =>\r\n                        <tr>\r\n                            <td>{index + 1 + (this.state.currentPage * this.state.size)}</td>\r\n                            <td>{item.toWarehouseDto!=null?item.toWarehouseDto.name:''}</td>\r\n                            <td>{item.createdAt.substr(0, 10) + '  |  ' + item.createdAt.substr(11, 5)}</td>\r\n                            <td>{item.createdBy.firstName + ' ' + item.createdBy.lastName}</td>\r\n                            <td>{item.fromWarehouseDto ? item.fromWarehouseDto.name : null}</td>\r\n                            {item.accepted ?\r\n                                <td><input type=\"checkbox\" checked={item.accepted}/></td>\r\n                                :\r\n                                <td><input type=\"checkbox\" checked={item.accepted}\r\n                                           onChange={() => openAcceptModal(item.id)}/></td>\r\n\r\n                            }\r\n                            <td>\r\n                                <button onClick={()=>openPwaListModal(item)}>...</button>\r\n                            </td>\r\n                            {!item.accepted ?\r\n                                getRoleNameFromJWT() === 'ROLE_SELLER' ?\r\n                                    ''\r\n                                    :\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger\" onClick={()=>openRemoveModal(item.id)}>O'chirish</button>\r\n                                    </td>\r\n                                : ''\r\n                            }\r\n                        </tr>\r\n                    )}\r\n                </Table>\r\n\r\n                <Modal size=\"lg\" isOpen={this.state.showModal}\r\n                       toggle={() => openModal('')}>\r\n                    <AvForm onValidSubmit={saveOrEdit}>\r\n                        <ModalBody>\r\n\r\n                            {getRoleNameFromJWT() === 'ROLE_DIRECTOR' || getRoleNameFromJWT() === 'ROLE_MANAGER' ?\r\n                                <AvField\r\n                                    label=\"Qaysi omborga kirim qilmoqchisiz?\"\r\n                                    type=\"select\"\r\n                                    name=\"toWarehouseId\"\r\n                                >\r\n                                    <option value=\"\" disabled={true}>Ombor tanlang:</option>\r\n                                    {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                        <option value={item.id}>{item.name}</option>\r\n                                    )}\r\n                                </AvField>\r\n                                : ''\r\n                            }\r\n\r\n                            {\r\n                                this.state.pwa && this.state.pwa.map((item, index) =>\r\n                                    <div key={index} className=\"row\">\r\n                                        <div className=\"col-md-5\">\r\n                                            <AsyncSelect\r\n                                                name=\"prodId\"\r\n                                                cacheOptions\r\n                                                loadOptions={loadOptions}\r\n                                                defaultOptions\r\n                                                value={item.productDto ? item.productDto : ''}\r\n                                                onInputChange={getProdId}\r\n                                                onChange={(e) => handleChange(e, index)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-5\">\r\n                                            <input value={item.amount} type=\"number\" name=\"amount\"\r\n                                                   onChange={(e) => getAmount(e, index)}/>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <div className=\"minusButton pb-2\"\r\n                                                 onClick={() => removeItem(item, index)}>X\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={addToArray}>+Add</button>\r\n                            </div>\r\n\r\n                        </ModalBody>\r\n\r\n                        <ModalFooter>\r\n                            <button type=\"button\" onClick={() => openModal('')} className=\"btn btn-danger\">Bekor qilish\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Saqlash</button>\r\n                        </ModalFooter>\r\n                    </AvForm>\r\n                </Modal>\r\n                <Modal isOpen={this.state.showAcceptModal} toggle={() => openAcceptModal('')}>\r\n                    <ModalHeader>Tasdiqlamoqchimisiz?</ModalHeader>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-danger\" onClick={() => openAcceptModal('')}>Bekor Qilish</button>\r\n                        <button className=\"btn btn-success\" onClick={accept}>Tasdiqlash</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.showRemoveModal} toggle={() => openRemoveModal('')}>\r\n                    <ModalHeader>O'chirmoqchimisiz?</ModalHeader>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-danger\" onClick={() => openRemoveModal('')}>Bekor Qilish</button>\r\n                        <button className=\"btn btn-warning\" onClick={remove}>O'chirish</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.showItemModal} toggle={() => openPwaListModal('')}>\r\n                    <ModalBody>\r\n                        <Table>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>Maxsulot Nomi</th>\r\n                                <th>Soni</th>\r\n                            </tr>\r\n                            {this.state.item?this.state.item.productWithAmountDtos&&this.state.item.productWithAmountDtos.map((itemm,index)=>\r\n                                    <tr>\r\n                                        <td>{index+1}</td>\r\n                                        <td>{itemm.productDto.name}</td>\r\n                                        <td>{itemm.amount}</td>\r\n                                    </tr>\r\n                                )\r\n\r\n                                :''\r\n                            }\r\n                        </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-warning\" onClick={() => openPwaListModal('')}>Yopish</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nWarehouseIncome.propTypes = {};\r\n\r\nexport default WarehouseIncome;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getRoleNameFromJWT} from \"../../utills/UsefullFunctions\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport AsyncSelect from \"react-select/async/dist/react-select.esm\";\r\nimport AdminRequests from \"../catalog_components/AdminRequests\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass WarehouseOutput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAddModal: false,\r\n            item: '',\r\n            products: [],\r\n            pwa: [\r\n                {\r\n                    id: '',\r\n                    productDto: '',\r\n                    amount: 0,\r\n                    productCount:'0'\r\n                }\r\n            ],\r\n            warehouses: [],\r\n            fromWarehouseId: 0,\r\n            toWarehouseId: 0,\r\n            page: 0,\r\n            size: 10,\r\n            accepted: false,\r\n            outcomeList: [],\r\n            totalElements: 0,\r\n            totalPages: 0,\r\n            showItemModal:false,\r\n            showRemoveModal:false,\r\n            removeOutcomeId:'',\r\n            startDate:'',\r\n            endDate:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allWarehouseWithoutPageable().then(res => {\r\n            console.log(res, \"allALL\")\r\n            this.setState({warehouses: res})\r\n        })\r\n        AdminRequests.getWarehouseIncomeByApprove({\r\n            accepted: this.state.accepted,\r\n            income: false,\r\n            fromWarehouseId: this.state.fromWarehouseId,\r\n            toWarehouseId: this.state.toWarehouseId,\r\n            page: this.state.page,\r\n            size: this.state.size,\r\n            startDate:'',\r\n            endDate:''\r\n        }).then(res => {\r\n            console.log(res, \"RESRESRESRES===INCOMES\")\r\n            this.setState(\r\n                {\r\n                    outcomeList: res.object,\r\n                    totalElements: res.totalElements,\r\n                    totalPages: res.totalPages\r\n                })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const openAddModal = (item) => {\r\n            this.setState({\r\n                showAddModal: !this.state.showAddModal,\r\n                item: item\r\n            })\r\n        }\r\n        const saveOrEdit = (e, v) => {\r\n            e.preventDefault()\r\n            let req = {\r\n                fromWarehouseDto: {\r\n                    id: v.fromWarehouseId\r\n                },\r\n                toWarehouseDto: {\r\n                    id: v.toWarehouseId\r\n                },\r\n                productWithAmountDtos: this.state.pwa\r\n            }\r\n            console.log(req, 'REQTRANSFER')\r\n            AdminRequests.saveOrEditTransfer(req).then(response => {\r\n                AdminRequests.getWarehouseIncomeByApprove({\r\n                    accepted: this.state.accepted,\r\n                    income: false,\r\n                    fromWarehouseId: this.state.fromWarehouseId,\r\n                    toWarehouseId: this.state.toWarehouseId,\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    startDate:this.state.startDate,\r\n                    endDate:this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, \"RESRESRESRES===INCOMES\")\r\n                    this.setState(\r\n                        {\r\n                            outcomeList: res.object,\r\n                            totalElements: res.totalElements,\r\n                            totalPages: res.totalPages,\r\n                            showAddModal: !this.state.showAddModal,\r\n                            item: '',\r\n                            pwa: [],\r\n                            products: []\r\n                        })\r\n                })\r\n            })\r\n\r\n        }\r\n        const getProdId = (val) => {\r\n            AdminRequests.searchProduct(val).then(res => {\r\n                this.setState({products: res})\r\n            })\r\n        }\r\n        const filterColors = (inputValue) => {\r\n            if (inputValue) {\r\n                return this.state.products.filter(i =>\r\n                    i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n                );\r\n            }\r\n        };\r\n        const loadOptions = (inputValue, callback) => {\r\n            setTimeout(() => {\r\n                callback(filterColors(inputValue));\r\n            }, 500);\r\n        };\r\n        const handleChange = (e, index) => {\r\n            console.log(e.id,'PROD ID')\r\n            console.log(this.state.fromWarehouseId,'FROM W ID')\r\n            AdminRequests.getProductCountByWarehouse(e.id,this.state.fromWarehouseId).then(res=>{\r\n                let tempArr = this.state.pwa\r\n                tempArr[index].productDto = e\r\n                tempArr[index].productCount = res\r\n                this.setState({pwa: tempArr})\r\n            })\r\n\r\n        }\r\n        const getAmount = (e, index) => {\r\n            let el= e.target.value;\r\n            let tempArr = this.state.pwa\r\n            console.log(Number(el)<1||Number(el)> tempArr[index].productCount,'EL')\r\n            console.log(Number(el)<1,'AMOUNT')\r\n            console.log(tempArr[index].productCount,'AMOUNT')\r\n            console.log(tempArr[index].productCount,'AMOUNT')\r\n             if (Number(el)<1||Number(el)> tempArr[index].productCount){\r\n                 e.target.value=undefined\r\n\r\n             }else {\r\n\r\n                // console.log(el, \"AMOUNTVVVVVVVVVVVVVVVV\")\r\n                // console.log(index, \"AMOUNTIIIIIIIIIIIIIIIIII\")\r\n\r\n                tempArr[index].amount = e.target.value\r\n                this.setState({pwa: tempArr})\r\n              }\r\n\r\n        }\r\n        const removeItem = (item, index) => {\r\n            console.log(item, 'ITEMMMMMMMMM')\r\n            console.log(index, \"INDEXXXXXXX\")\r\n            let tempArr = this.state.pwa\r\n            tempArr.splice(index, 1);\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        const addToArray = () => {\r\n            let tempArr = this.state.pwa\r\n            let s = {\r\n                id: '',\r\n                productDto: '',\r\n                amount: 0,\r\n                productCount:'0'\r\n            }\r\n            console.log(s, \"SSSSSSSSS\")\r\n            tempArr.push(s)\r\n            console.log(tempArr, \"TEMPARR\")\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        const openPwaListModal=(item)=>{\r\n            console.log(item,'ITEM TO SHOW PWA')\r\n            this.setState({\r\n                item,\r\n                showItemModal:!this.state.showItemModal\r\n            })\r\n        }\r\n        const openRemoveModal = (id) => {\r\n            this.setState(\r\n                {\r\n                    showRemoveModal: !this.state.showRemoveModal,\r\n                    removeOutcomeId: id\r\n                })\r\n\r\n        }\r\n        const remove = () => {\r\n            AdminRequests.removeWarehouseIncome(this.state.removeOutcomeId).then(response => {\r\n                AdminRequests.getWarehouseIncomeByApprove({\r\n                    accepted: this.state.accepted,\r\n                    income: false,\r\n                    fromWarehouseId: this.state.fromWarehouseId,\r\n                    toWarehouseId: this.state.toWarehouseId,\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    startDate:this.state.startDate,\r\n                    endDate:this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, \"RESRESRESRES===INCOMES\")\r\n                    this.setState(\r\n                        {\r\n                            outcomeList: res.object,\r\n                            totalElements: res.totalElements,\r\n                            totalPages: res.totalPages,\r\n                            showRemoveModal: !this.state.showRemoveModal,\r\n                            removeOutcomeId: ''\r\n                        })\r\n                })\r\n            })\r\n        }\r\n        const getByFromWarehouse = (e) => {\r\n            let s = e.target.value;\r\n            AdminRequests.getWarehouseIncomeByApprove({\r\n                accepted: this.state.accepted,\r\n                income: false,\r\n                fromWarehouseId: s,\r\n                toWarehouseId: this.state.toWarehouseId,\r\n                page: 0,\r\n                size: this.state.size,\r\n                startDate:this.state.startDate,\r\n                endDate:this.state.endDate\r\n            }).then(res => {\r\n                console.log(res, \"RESRESRESRES===INCOMES\")\r\n                this.setState(\r\n                    {\r\n                        outcomeList: res.object,\r\n                        totalElements: res.totalElements,\r\n                        totalPages: res.totalPages,\r\n                        fromWarehouseId: s,\r\n                        page:0\r\n                    })\r\n            })\r\n        }\r\n        const getByApproved = (e) => {\r\n            console.log(e.target.value, 'APPROVED')\r\n            AdminRequests.getWarehouseIncomeByApprove({\r\n                accepted: !this.state.accepted,\r\n                income: false,\r\n                fromWarehouseId: this.state.fromWarehouseId,\r\n                toWarehouseId: this.state.toWarehouseId,\r\n                page: 0,\r\n                size: this.state.size,\r\n                startDate:this.state.startDate,\r\n                endDate:this.state.endDate\r\n            }).then(res => {\r\n                console.log(res, \"RESRESRESRES===INCOMES\")\r\n                this.setState(\r\n                    {\r\n                        outcomeList: res.object,\r\n                        totalElements: res.totalElements,\r\n                        totalPages: res.totalPages,\r\n                        accepted: !this.state.accepted,\r\n                        page:0\r\n                    })\r\n            })\r\n        }\r\n        const handlePageChange=(pageNumber)=>{\r\n            AdminRequests.getWarehouseIncomeByApprove({\r\n                accepted: !this.state.accepted,\r\n                income: false,\r\n                fromWarehouseId: this.state.fromWarehouseId,\r\n                toWarehouseId: this.state.toWarehouseId,\r\n                page: pageNumber-1,\r\n                size: this.state.size,\r\n                startDate:this.state.startDate,\r\n                endDate:this.state.endDate\r\n            }).then(res => {\r\n                console.log(res, \"RESRESRESRES===INCOMES\")\r\n                this.setState(\r\n                    {\r\n                        outcomeList: res.object,\r\n                        totalElements: res.totalElements,\r\n                        totalPages: res.totalPages,\r\n                        page:pageNumber-1\r\n                    })\r\n            })\r\n        }\r\n        const getFromWarehouseId=(e)=>{\r\n            console.log(e.target.value,'FROM WAREHOUSE ID')\r\n            this.setState({fromWarehouseId:e.target.value})\r\n        }\r\n        const getStartDate = (startDate) => {\r\n            if (this.state.endDate) {\r\n                AdminRequests.getWarehouseIncomeByApprove({\r\n                    accepted: this.state.accepted,\r\n                    income: false,\r\n                    fromWarehouseId: this.state.fromWarehouseId,\r\n                    toWarehouseId: this.state.toWarehouseId,\r\n                    page: 0,\r\n                    size: this.state.size,\r\n                    startDate,\r\n                    endDate:this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, \"RESRESRESRES===INCOMES\")\r\n                    this.setState(\r\n                        {\r\n                            outcomeList: res.object,\r\n                            totalElements: res.totalElements,\r\n                            totalPages: res.totalPages,\r\n                            startDate\r\n                        })\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    startDate\r\n                })\r\n            }\r\n        }\r\n        const getEndDate = (endDate) => {\r\n            AdminRequests.getWarehouseIncomeByApprove({\r\n                accepted: this.state.accepted,\r\n                income: false,\r\n                fromWarehouseId: this.state.fromWarehouseId,\r\n                toWarehouseId: this.state.toWarehouseId,\r\n                page: 0,\r\n                size: this.state.size,\r\n                startDate:this.state.startDate,\r\n                endDate\r\n            }).then(res => {\r\n                console.log(res, \"RESRESRESRES===INCOMES\")\r\n                this.setState(\r\n                    {\r\n                        outcomeList: res.object,\r\n                        totalElements: res.totalElements,\r\n                        totalPages: res.totalPages,\r\n                        endDate\r\n                    })\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <button type=\"button\" className=\"btn btn-success ml-5 mr-5\" onClick={() => openAddModal('')}>\r\n                            Chiqim qilish\r\n                        </button>\r\n                        {getRoleNameFromJWT() === 'ROLE_DIRECTOR' || getRoleNameFromJWT() === 'ROLE_MANAGER' ?\r\n                            <select name=\"warehouse\" id=\"warehouse\" onChange={getByFromWarehouse}>\r\n                                <option value={0}>Barcha Omborlar :</option>\r\n                                {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                    <option value={item.id}>{item.name}</option>\r\n                                )}\r\n                            </select> : ''\r\n                        }\r\n                        <label htmlFor=\"accepted\" className=\"ml-5\">Tasdiqlangan:</label>\r\n                        <input id=\"accepted\" type=\"checkbox\" checked={this.state.accepted} onChange={getByApproved}\r\n                               className=\"ml-2\"/>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <DatePicker\r\n                            selected={this.state.startDate}\r\n                            onChange={(date) => getStartDate(date)}\r\n                            selectsStart\r\n                            startDate={this.state.startDate}\r\n                            endDate={this.state.endDate}\r\n                        />\r\n                        <DatePicker\r\n                            selected={this.state.endDate}\r\n                            onChange={(date) => getEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={this.state.startDate}\r\n                            endDate={this.state.endDate}\r\n                            minDate={this.state.startDate}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <Pagination\r\n                            activePage={this.state.page+1}\r\n                            itemsCountPerPage={this.state.size}\r\n                            totalItemsCount={this.state.totalElements}\r\n                            pageRangeDisplayed={5}\r\n                            onChange={handlePageChange}\r\n                            itemClass=\"page-item\"\r\n                            linkClass=\"page-link\"\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <Table>\r\n                    <tr>\r\n                        <th>T/R</th>\r\n                        <th>Qayerdan</th>\r\n                        <th>Qachon</th>\r\n                        <th>Kim</th>\r\n                        <th>Qayerga</th>\r\n                        <th>Tasdiqlangan</th>\r\n                        <th>Nimalar</th>\r\n                        {this.state.accepted ? '' :\r\n                            <th>Amallar</th>\r\n                        }\r\n                    </tr>\r\n                    {this.state.outcomeList && this.state.outcomeList.map((item, index) =>\r\n                        <tr>\r\n                            <td>{index + 1 + (this.state.page * this.state.size)}</td>\r\n                            <td>{item.fromWarehouseDto.name}</td>\r\n                            <td>{item.createdAt.substr(0, 10) + '  |  ' + item.createdAt.substr(11, 5)}</td>\r\n                            <td>{item.createdBy.firstName + ' ' + item.createdBy.lastName}</td>\r\n                            <td>{item.toWarehouseDto ? item.toWarehouseDto.name : null}</td>\r\n                            <td><input type=\"checkbox\" checked={item.accepted}/></td>\r\n                            <td>\r\n                                <button onClick={() => openPwaListModal(item)}>...</button>\r\n                            </td>\r\n                            {!item.accepted ?\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger\"\r\n                                                onClick={() => openRemoveModal(item.id)}>O'chirish\r\n                                        </button>\r\n                                    </td>\r\n                                : ''\r\n                            }\r\n                        </tr>\r\n                    )}\r\n                </Table>\r\n\r\n\r\n                <Modal size=\"lg\" isOpen={this.state.showAddModal}\r\n                       toggle={() => openAddModal('')}>\r\n                    <AvForm onValidSubmit={saveOrEdit}>\r\n                        <ModalBody>\r\n                            {getRoleNameFromJWT() === 'ROLE_DIRECTOR' || getRoleNameFromJWT() === 'ROLE_MANAGER' ?\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <AvField\r\n                                            label=\"Qaysi ombordan chiqim qilmoqchisiz?\"\r\n                                            type=\"select\"\r\n                                            name=\"fromWarehouseId\"\r\n                                            onChange={getFromWarehouseId}\r\n                                        >\r\n                                            <option value=\"\" disabled={true}>Ombor tanlang:</option>\r\n                                            {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                                <option value={item.id}>{item.name}</option>\r\n                                            )}\r\n                                        </AvField>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <AvField\r\n                                            label=\"Qaysi omborga chiqim qilmoqchisiz?\"\r\n                                            type=\"select\"\r\n                                            name=\"toWarehouseId\"\r\n                                        >\r\n                                            <option value=\"\" disabled={true}>Ombor tanlang:</option>\r\n                                            {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                                <option value={item.id}>{item.name}</option>\r\n                                            )}\r\n                                        </AvField>\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <AvField\r\n                                    label=\"Qaysi omborga chiqim qilmoqchisiz?\"\r\n                                    type=\"select\"\r\n                                    name=\"toWarehouseId\"\r\n                                >\r\n                                    <option value=\"\" disabled={true}>Ombor tanlang:</option>\r\n                                    {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                        <option value={item.id}>{item.name}</option>\r\n                                    )}\r\n                                </AvField>\r\n                            }\r\n\r\n\r\n                            : ''\r\n\r\n                            {\r\n                                this.state.pwa && this.state.pwa.map((item, index) =>\r\n                                    <div key={index} className=\"row\">\r\n                                        <div className=\"col-md-5\">\r\n                                            <AsyncSelect\r\n                                                name=\"prodId\"\r\n                                                cacheOptions\r\n                                                loadOptions={loadOptions}\r\n                                                defaultOptions\r\n                                                value={item.productDto ? item.productDto : ''}\r\n                                                onInputChange={getProdId}\r\n                                                onChange={(e) => handleChange(e, index)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-5\">\r\n                                            <input value={item.amount}  type=\"number\" name=\"amount\"\r\n                                                   min={0}\r\n                                                   required={true}\r\n                                                   max={item.productCount}\r\n                                                   onChange={(e) => getAmount(e, index)}/>\r\n                                        </div>\r\n                                        <div className=\"col-md-2\">\r\n                                            <div className=\"minusButton pb-2\"\r\n                                                 onClick={() => removeItem(item, index)}>X\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <button type=\"button\" className=\"btn btn-success\" onClick={addToArray}>+Add</button>\r\n                            </div>\r\n\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"button\" onClick={() => openAddModal('')} className=\"btn btn-danger\">Bekor\r\n                                qilish\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-success\">Saqlash</button>\r\n                        </ModalFooter>\r\n                    </AvForm>\r\n                </Modal>\r\n                <Modal isOpen={this.state.showItemModal} toggle={() => openPwaListModal('')}>\r\n                    <ModalBody>\r\n                        <Table>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>Maxsulot Nomi</th>\r\n                                <th>Soni</th>\r\n                            </tr>\r\n                            {this.state.item?this.state.item.productWithAmountDtos&&this.state.item.productWithAmountDtos.map((itemm,index)=>\r\n                                <tr>\r\n                                    <td>{index+1}</td>\r\n                                    <td>{itemm.productDto.name}</td>\r\n                                    <td>{itemm.amount}</td>\r\n                                </tr>\r\n                            )\r\n\r\n                                :''\r\n                            }\r\n                        </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-warning\" onClick={() => openPwaListModal('')}>Yopish</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.showRemoveModal} toggle={() => openRemoveModal('')}>\r\n                    <ModalHeader>O'chirmoqchimisiz?</ModalHeader>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-danger\" onClick={() => openRemoveModal('')}>Bekor Qilish</button>\r\n                        <button className=\"btn btn-warning\" onClick={remove}>O'chirish</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nWarehouseOutput.propTypes = {};\r\n\r\nexport default WarehouseOutput;","import React, {Component} from 'react';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {NavLink, Nav, NavItem, TabContent, TabPane} from \"reactstrap\";\r\nimport UserPane from \"../components/catalog_components/UserPane\";\r\nimport ShopPane from \"../components/catalog_components/ShopPane\";\r\nimport WarehousePane from \"../components/catalog_components/WarehousePane\";\r\nimport CategoryPane from \"../components/catalog_components/CategoryPane\";\r\nimport ProductPane from \"../components/catalog_components/ProductPane\";\r\nimport CatalogTable from \"../components/catalog_components/CatalogTable\";\r\nimport WarehouseIncome from \"../components/warehouseComponents/WarehouseIncome\";\r\nimport WarehouseOutput from \"../components/warehouseComponents/WarehouseOutput\";\r\n\r\nclass Warehouse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            activeTab:'1'\r\n        }\r\n    }\r\n    render() {\r\n        const {history} = this.props\r\n        const toggle = tab => {\r\n            if(this.state.activeTab !== tab) this.setState({activeTab:tab});\r\n        }\r\n        return (\r\n            getRoleNameFromJWT()?\r\n                <div className='row row-style'>\r\n                    <div className='col-md-2 col-2-style'>\r\n                        <Navbar role={getRoleNameFromJWT()} history={history} tab=\"3\"/>\r\n                    </div>\r\n                    <div className='col-md-10 col-10-style'>\r\n\r\n                            <Nav className=\"mt-2\" tabs>\r\n\r\n                                <NavItem className=\"ml-4\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '1'}}\r\n                                        onClick={() => {\r\n                                            toggle('1');\r\n                                        }}\r\n                                    >\r\n                                        Kirim\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"ml-4\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '2'}}\r\n                                        onClick={() => {\r\n                                            toggle('2');\r\n                                        }}\r\n                                    >\r\n                                        Chiqim\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n\r\n                        <TabContent activeTab={this.state.activeTab} className=\"mt-3\">\r\n\r\n                                <TabPane tabId={'1'} >\r\n                                    <WarehouseIncome/>\r\n                                </TabPane>\r\n\r\n                                <TabPane tabId={'2'}>\r\n                                    <WarehouseOutput/>\r\n                                </TabPane>\r\n                        </TabContent>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Redirect to=\"/\" />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Warehouse;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {BASE_URL, ROLE, TOKEN} from \"../utills/constants\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport HomePage from \"./HomePage\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {\r\n    NavLink,\r\n    Button,\r\n    Card,\r\n    CardText,\r\n    CardTitle,\r\n    Col,\r\n    Nav,\r\n    NavItem,\r\n    Row,\r\n    TabContent,\r\n    TabPane,\r\n    Table, Modal, ModalHeader, ModalFooter, ModalBody\r\n} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\nimport axios from \"axios\";\r\nimport {apiPath} from \"../apiPath/apiPath\";\r\nimport {configHeader} from \"../utills/congifHeader\";\r\nimport {toast} from \"react-toastify\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\n\r\nclass Transfer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: '1',\r\n            showModal: false,\r\n            showRemoveModal: false,\r\n            currentItem: '',\r\n            transfers: [],\r\n            totalElements: 0,\r\n            currentPage: 0,\r\n            isAccepted: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let tempRole = getRoleNameFromJWT();\r\n        if (tempRole === 'ROLE_MANAGER') {\r\n            this.setState({activeTab: '1'})\r\n        }\r\n        this.getTransfers()\r\n    }\r\n\r\n    getTransfers = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: BASE_URL + apiPath.getAllTransferByPageable,\r\n            ...configHeader,\r\n            params: {\r\n                accepted: this.state.isAccepted\r\n            }\r\n        }).then(res => {\r\n                this.setState({\r\n                    transfers: res.data.object,\r\n                    totalElements: res.data.object.totalElements\r\n                })\r\n            }\r\n        ).catch(ignore => {\r\n            // console.log(\"ERROR: \" + ignore)\r\n        })\r\n    }\r\n\r\n    updateTransfer = (id) => {\r\n        axios({\r\n            method: 'PUT',\r\n            url: BASE_URL + apiPath.saveOrEditTransfer + id,\r\n            headers: {\r\n                'Authorization': localStorage.getItem(TOKEN),\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            params: {\r\n                accepted: this.state.isAccepted\r\n            }\r\n        }).then(res => {\r\n                this.getTransfers()\r\n                toast.success(res.data.message)\r\n            }\r\n        ).catch(ignore => {\r\n            // console.log(\"ERROR: \" + ignore)\r\n        })\r\n    }\r\n\r\n    _onChange = (e) => {\r\n        this.state.isAccepted = e.target.value\r\n        this.getTransfers()\r\n    };\r\n\r\n    render() {\r\n        const {history} = this.props\r\n        const toggle = tab => {\r\n            if (this.state.activeTab !== tab) this.setState({activeTab: tab});\r\n        }\r\n\r\n        return (\r\n            getRoleNameFromJWT() ?\r\n                <div className='row'>\r\n                    <div className='col-md-2' style={{backgroundColor: \"#eceff1\"}}>\r\n                        <Navbar role={getRoleNameFromJWT()} history={history}/>\r\n                    </div>\r\n                    <div className='col-md-10' style={{backgroundColor: \"#e2e1e1\"}}>\r\n                        <Nav className=\"mt-2\" tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={{active: this.state.activeTab === '1'}}\r\n                                    onClick={() => {\r\n                                        toggle('1');\r\n                                    }}\r\n                                >\r\n                                    Transferlar\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n\r\n                        <TabContent activeTab={this.state.activeTab} className=\"mt-3\">\r\n                            {getRoleNameFromJWT() === 'ROLE_DIRECTOR' || getRoleNameFromJWT() === 'ROLE_MANAGER' ?\r\n                                <TabPane tabId=\"1\">\r\n                                    <Row>\r\n                                        <Col sm=\"12\">\r\n                                            <form action=\"\">\r\n                                                <select className=\"form-control-sm\"\r\n                                                        style={{outline: \"none\", backgroundColor: \"#92d4a5\"}}\r\n                                                        onChange={e => this._onChange(e)}>\r\n                                                    <option  value={false}>Tasdiqlanmagan</option>\r\n                                                    <option  value={true}>Tasdiqlangan</option>\r\n                                                </select>\r\n                                            </form>\r\n                                            <Table striped>\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>T/r</th>\r\n                                                    <th>Qayerdan</th>\r\n                                                    <th>Kimdan</th>\r\n                                                    <th>Qayerga</th>\r\n                                                    <th>Kimga</th>\r\n                                                    <th>Soni</th>\r\n                                                    <th>Accepted</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {this.state.transfers &&\r\n                                                this.state.transfers.map((item, index) =>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">{index + 1 + (this.state.currentPage * 10)}</th>\r\n                                                        <td>{item.shopDto.name + '  ' + item.shopDto.address}</td>\r\n                                                        <td>{item.sellerDto.firstName + '  ' + item.sellerDto.lastName}</td>\r\n                                                        <td>{item.managerDto.firstName + '  ' + item.managerDto.lastName}</td>\r\n                                                        {!item.accepted ? <td><Button onClick={()=>this.updateReport(item.id)} type=\"button\"\r\n                                                                                      className=\"btn btn-success\">Tasdiqlash</Button>\r\n                                                        </td> : null}\r\n                                                        <td>{item.transfers}</td>\r\n                                                    </tr>\r\n                                                )}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </TabPane>\r\n                                :''\r\n                            }\r\n                        </TabContent>\r\n\r\n                        <TabContent activeTab={this.state.activeTab} className=\"mt-3\">\r\n                            {getRoleNameFromJWT() === 'ROLE_SELLER' ?\r\n                                <TabPane tabId=\"1\">\r\n                                    <Row>\r\n                                        <Col sm=\"12\">\r\n                                            <Table striped>\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>T/R</th>\r\n                                                    <th>Shop</th>\r\n                                                    <th>Seller</th>\r\n                                                    <th>Manager</th>\r\n                                                    <th>Accepted</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {this.state.reports &&\r\n                                                this.state.reports.map((item, index) =>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">{index + 1 + (this.state.currentPage * 10)}</th>\r\n                                                        <td>{item.shopDto.name + '  ' + item.shopDto.address}</td>\r\n                                                        <td>{item.sellerDto.firstName + '  ' + item.sellerDto.lastName}</td>\r\n                                                        <td>{item.managerDto.firstName + '  ' + item.managerDto.lastName}</td>\r\n                                                        <td><input type=\"checkbox\" checked={item.accepted}/></td>\r\n                                                        <td>{item.reports}</td>\r\n                                                    </tr>\r\n                                                )}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </TabPane>\r\n                                :''\r\n                            }\r\n                        </TabContent>\r\n\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Redirect to=\"/\"/>\r\n        );\r\n    }\r\n}\r\n\r\nTransfer.propTypes = {};\r\n\r\nexport default Transfer;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {BASE_URL, ROLE, TOKEN} from \"../utills/constants\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport HomePage from \"./HomePage\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {\r\n    NavLink,\r\n    Button,\r\n    Card,\r\n    CardText,\r\n    CardTitle,\r\n    Col,\r\n    Nav,\r\n    NavItem,\r\n    Row,\r\n    TabContent,\r\n    TabPane,\r\n    Table, Modal, ModalHeader, ModalFooter, ModalBody\r\n} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\nimport axios from \"axios\";\r\nimport {apiPath} from \"../apiPath/apiPath\";\r\nimport {configHeader} from \"../utills/congifHeader\";\r\nimport {toast} from \"react-toastify\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport AddEditModal from \"../components/catalog_components/AddEditModal\";\r\nimport CatalogTable from \"../components/catalog_components/CatalogTable\";\r\nimport AdminRequests from \"../components/catalog_components/AdminRequests\";\r\nimport UserPane from \"../components/catalog_components/UserPane\";\r\nimport ShopPane from \"../components/catalog_components/ShopPane\";\r\nimport WarehousePane from \"../components/catalog_components/WarehousePane\";\r\nimport CategoryPane from \"../components/catalog_components/CategoryPane\";\r\nimport ProductPane from \"../components/catalog_components/ProductPane\";\r\n\r\nclass Catalog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: '1',\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let tempRole = getRoleNameFromJWT();\r\n        if (tempRole === 'ROLE_MANAGER') {\r\n            this.setState({activeTab: '4'})\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setState(state, callback) {\r\n        super.setState(state, callback);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {history} = this.props\r\n        const toggle = tab => {\r\n            if (this.state.activeTab !== tab) {\r\n                this.setState({activeTab: tab});\r\n                if (tab === '2') {\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            getRoleNameFromJWT() ?\r\n                <div className='row row-style'>\r\n                    <div className='col-md-2 col-2-style'>\r\n                        <Navbar role={getRoleNameFromJWT()} history={history} tab=\"6\"/>\r\n                    </div>\r\n                    <div className='col-md-10 col-10-style'>\r\n\r\n                        {getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                            <Nav className=\"mt-2\" tabs>\r\n                                <NavItem className=\"ml-3\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '1'}}\r\n                                        onClick={() => {\r\n                                            toggle('1');\r\n                                        }}\r\n                                    >\r\n                                        Hodimlar\r\n                                    </NavLink>\r\n                                </NavItem>\r\n\r\n                                <NavItem className=\"ml-3\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '2'}}\r\n                                        onClick={() => {\r\n                                            toggle('2');\r\n                                        }}\r\n                                    >\r\n                                        Magazinlar\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"ml-3\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '3'}}\r\n                                        onClick={() => {\r\n                                            toggle('3');\r\n                                        }}\r\n                                    >\r\n                                        Omborlar\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"ml-3\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '4'}}\r\n                                        onClick={() => {\r\n                                            toggle('4');\r\n                                        }}\r\n                                    >\r\n                                        Kategoriya\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"ml-3\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '5'}}\r\n                                        onClick={() => {\r\n                                            toggle('5');\r\n                                        }}\r\n                                    >\r\n                                        Maxsulotlar\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            : ''\r\n                        }\r\n                        {getRoleNameFromJWT() === 'ROLE_MANAGER' ?\r\n                            <Nav className=\"mt-2\" tabs>\r\n                                <NavItem className=\"ml-3\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '4'}}\r\n                                        onClick={() => {\r\n                                            toggle('4');\r\n                                        }}\r\n                                    >\r\n                                        Kategoriya\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"ml-3\">\r\n                                    <NavLink\r\n                                        className={{active: this.state.activeTab === '5'}}\r\n                                        onClick={() => {\r\n                                            toggle('5');\r\n                                        }}\r\n                                    >\r\n                                        Maxsulotlar\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            : ''\r\n                        }\r\n\r\n                        <TabContent activeTab={this.state.activeTab} className=\"mt-3\">\r\n                            {getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                <UserPane state={this.state} tabId={\"1\"}/>\r\n                                : ''\r\n                            }\r\n                            {getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                <ShopPane state={this.state} tabId={\"2\"}/>\r\n                                : ''\r\n                            }\r\n                            {getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                <WarehousePane state={this.state} tabId={\"3\"}/>\r\n                                : ''\r\n                            }\r\n                            <CategoryPane state={this.state} tabId={\"4\"}/>\r\n\r\n                            <ProductPane state={this.state} tabId={\"5\"}/>\r\n\r\n                        </TabContent>\r\n\r\n\r\n                        <Modal isOpen={this.state.showRemoveModal} toggle={() => this.setState({\r\n                            showRemoveModal: !this.state.showRemoveModal,\r\n                            currentItem: ''\r\n                        })}>\r\n                            <ModalHeader>O'chirishni istaysizmi ?</ModalHeader>\r\n                            <ModalFooter>\r\n                                <button type=\"button\" onClick={() => this.setState({\r\n                                    showRemoveModal: !this.state.showRemoveModal,\r\n                                    currentItem: ''\r\n                                })} className=\"btn btn-danger\">Bekor qilish\r\n                                </button>\r\n                                <button type=\"button\" onClick={\"\"} className=\"btn btn-success\">Ha</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Redirect to=\"/\"/>\r\n        );\r\n    }\r\n}\r\n\r\nCatalog.propTypes = {};\r\n\r\nexport default Catalog;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {ROLE} from \"../utills/constants\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        const {history} = this.props\r\n        return (\r\n            getRoleNameFromJWT()?\r\n                <div className='row'>\r\n                    <div className='col-md-2'>\r\n                        <Navbar role={getRoleNameFromJWT()} history={history}/>\r\n                    </div>\r\n                    <div className='col-md-10'>\r\n                        This is Settings page for {getRoleNameFromJWT()}\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Redirect to=\"/\" />\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {};\r\n\r\nexport default Settings;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {BASE_URL, ROLE, TOKEN} from \"../utills/constants\";\r\nimport {login} from '../redux/actions/AuthAction'\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux'\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport AdminRequests from \"../components/catalog_components/AdminRequests\";\r\n\r\nclass SellerSale extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showSaleModal: false,\r\n            showTradePwaModal: false,\r\n            showCloseDayModal: false,\r\n            showTradeRemoveModal: false,\r\n            item: '',\r\n            pwa: [\r\n                {\r\n                    id: '',\r\n                    productDto: '',\r\n                    amount: 0,\r\n                    productCount: 0,\r\n                    realSoldPrice: 0\r\n                }\r\n            ],\r\n            products: [],\r\n            fromWarehouseId: 0,\r\n            discount: '',\r\n            hasDiscount: false,\r\n            totalAmount: 0,\r\n            totalDiscount: 0,\r\n            accepted: false,\r\n            trades: [],\r\n            totalElements: 0,\r\n            page: 0,\r\n            size: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.getTradesByAccepted().then(res => {\r\n            console.log(res, \"RES\")\r\n            this.setState({\r\n                trades: res\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const setTotalAmount = () => {\r\n            let temp = [...this.state.pwa]\r\n            let total = temp.reduce(function (accumulator, currentValue) {\r\n                return accumulator + (currentValue.realSoldPrice * currentValue.amount);\r\n            }, 0)\r\n            this.setState({totalAmount: total}, () => setTotalDiscount())\r\n        }\r\n        const setTotalDiscount = () => {\r\n            const t = this.state.totalAmount\r\n            console.log(t, 'totalAmount')\r\n            console.log(this.state.discount, 'discount')\r\n            let total = this.state.discount ? this.state.discount.discountType === 'PERCENT' ? (t * this.state.discount.amount) / 100 : this.state.discount.amount : 0\r\n            console.log(total, 'totalDiscount')\r\n            this.setState({\r\n                totalDiscount: total\r\n            })\r\n        }\r\n        const {history} = this.props\r\n        const openSaleModal = (item) => {\r\n            this.setState({\r\n                showSaleModal: !this.state.showSaleModal,\r\n                item,\r\n                pwa: [\r\n                    {\r\n                        id: '',\r\n                        productDto: '',\r\n                        amount: 0,\r\n                        productCount: 0,\r\n                        realSoldPrice: 0\r\n                    }\r\n                ],\r\n                discount: '',\r\n                totalAmount: 0,\r\n                hasDiscount: false,\r\n                totalDiscount: 0\r\n            })\r\n        }\r\n        const addPwa = () => {\r\n            let tempPwa = this.state.pwa;\r\n            let s = {\r\n                id: '',\r\n                productDto: '',\r\n                amount: 0,\r\n                productCount: 0,\r\n                realSoldPrice: 0\r\n            }\r\n            tempPwa.push(s);\r\n            this.setState({pwa: tempPwa})\r\n        }\r\n        const filterColors = (inputValue) => {\r\n            if (inputValue) {\r\n                return this.state.products.filter(i =>\r\n                    i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n                );\r\n            }\r\n        };\r\n        const loadOptions = (inputValue, callback) => {\r\n            setTimeout(() => {\r\n                callback(filterColors(inputValue));\r\n            }, 100);\r\n        };\r\n        const getProdId = (val) => {\r\n            AdminRequests.searchProduct(val).then(res => {\r\n                this.setState({products: res})\r\n            })\r\n        }\r\n        const handleChange = (e, index) => {\r\n            console.log(e, 'PROD ID')\r\n            console.log(this.state.fromWarehouseId, 'FROM W ID')\r\n            AdminRequests.getProductCountByWarehouse(e.id, this.state.fromWarehouseId).then(res => {\r\n                let tempArr = [...this.state.pwa]\r\n                tempArr[index].productDto = e\r\n                tempArr[index].realSoldPrice = e.salePrice\r\n                tempArr[index].productCount = res\r\n                this.setState({pwa: tempArr}, () => {\r\n                    setTotalAmount()\r\n                })\r\n                console.log(tempArr, 'TEMPARR')\r\n            })\r\n\r\n        }\r\n        const getAmount = (e, index) => {\r\n            let el = e.target.value;\r\n            let tempArr = this.state.pwa\r\n            if (Number(el) < 1 || Number(el) > tempArr[index].productCount) {\r\n                e.target.value = undefined\r\n            } else {\r\n                tempArr[index].amount = e.target.value\r\n                this.setState({pwa: tempArr}, () => {\r\n                    setTotalAmount()\r\n                })\r\n            }\r\n\r\n        }\r\n        const getRealSoldPrice = (e, index) => {\r\n            let el = e.target.value;\r\n            let tempArr = [...this.state.pwa];\r\n            console.log(tempArr[index].productDto.incomePrice, 'XXXX')\r\n            console.log(el, 'VALUE')\r\n            tempArr[index].realSoldPrice = el;\r\n\r\n            this.setState({pwa: tempArr}, () => {\r\n                setTotalAmount()\r\n            })\r\n        }\r\n        const removeItem = (item, index) => {\r\n            let tempArr = this.state.pwa\r\n            tempArr.splice(index, 1);\r\n            this.setState({pwa: tempArr}, () => {\r\n                setTotalAmount()\r\n            })\r\n        }\r\n        const saveOrEditTrade = () => {\r\n            let obj = {\r\n                productWithAmountDtos: this.state.pwa,\r\n            }\r\n            if (this.state.discount) {\r\n                obj.discountDto = this.state.discount\r\n            }\r\n\r\n            console.log(obj, 'OBJ FOR TradeDto')\r\n            AdminRequests.saveOrEditTrade(obj).then(response => {\r\n                AdminRequests.getTradesByAccepted().then(res => {\r\n                    console.log(res, \"RES\")\r\n                    this.setState({\r\n                        trades: res,\r\n                        showSaleModal: !this.state.showSaleModal,\r\n                        item:'',\r\n                        pwa: [\r\n                            {\r\n                                id: '',\r\n                                productDto: '',\r\n                                amount: 0,\r\n                                productCount: 0,\r\n                                realSoldPrice: 0\r\n                            }\r\n                        ],\r\n                        discount: '',\r\n                        totalAmount: 0,\r\n                        hasDiscount: false,\r\n                        totalDiscount: 0\r\n                    })\r\n\r\n                })\r\n\r\n            })\r\n        }\r\n        const showDiscount = (e) => {\r\n            let s = e.target.value\r\n            console.log(s, 'SSSS')\r\n            if (s == 'true') {\r\n                console.log(\"TRUE\")\r\n                this.setState({\r\n                    discount: '',\r\n                    hasDiscount: false,\r\n                    totalDiscount: 0\r\n                })\r\n            } else {\r\n                console.log(\"FALSE\")\r\n                let temp = this.state.discount\r\n                temp = {\r\n                    id: '',\r\n                    discountType: 'PERCENT',\r\n                    amount: 1\r\n                }\r\n                this.setState({\r\n                    discount: temp,\r\n                    hasDiscount: true\r\n                }, () => setTotalDiscount())\r\n                setTotalDiscount()\r\n            }\r\n        }\r\n        const changeDiscountAmount = (e) => {\r\n            let temp = this.state.discount\r\n            let s = e.target.value\r\n            if (Number(s) < 1) {\r\n                e.target.value = undefined\r\n            } else {\r\n                temp.amount = s\r\n                this.setState({discount: temp}, () => setTotalDiscount())\r\n                setTotalDiscount()\r\n            }\r\n        }\r\n        const changeDiscountType = (e) => {\r\n            let temp = this.state.discount\r\n            let s = e.target.value\r\n            temp.discountType = s\r\n            this.setState({discount: temp}, () => setTotalDiscount())\r\n            setTotalDiscount()\r\n        }\r\n        const showTradePwa = (item) => {\r\n            this.setState({item, showTradePwaModal: !this.state.showTradePwaModal})\r\n        }\r\n        const showTradeRemove = (item) => {\r\n            this.setState({item, showTradeRemoveModal: !this.state.showTradeRemoveModal})\r\n        }\r\n        const removeTrade = () => {\r\n            AdminRequests.removeTrade(this.state.item.id).then(response => {\r\n                AdminRequests.getTradesByAccepted().then(res => {\r\n                    console.log(res, \"RES\")\r\n                    this.setState({\r\n                        trades: res,\r\n                        item: '',\r\n                        showTradeRemoveModal: !this.state.showTradeRemoveModal\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const openCloseDayModal=()=>{\r\n            this.setState({\r\n                showCloseDayModal:!this.state.showCloseDayModal\r\n            })\r\n        }\r\n        const closeDay=()=>{\r\n            AdminRequests.closeDay(this.state.trades[0].id).then(response=>{\r\n                AdminRequests.getTradesByAccepted().then(res => {\r\n                    console.log(res, \"RES\")\r\n                    this.setState({\r\n                        trades: res,\r\n                        showCloseDayModal:!this.state.showCloseDayModal\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        return (\r\n            getRoleNameFromJWT() && getRoleNameFromJWT() === 'ROLE_SELLER' ?\r\n                <div className='row'>\r\n                    <div className='col-md-2 col-2-style'>\r\n                        <Navbar role={getRoleNameFromJWT()} history={history} tab=\"1\"/>\r\n                    </div>\r\n                    <div className='col-md-10 col-10-style pb-3'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <button type=\"button\" className=\"btn btn-success ml-5 mr-5\"\r\n                                        onClick={() => openSaleModal('')}>\r\n                                    Sotish\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                {this.state.trades.length ?\r\n                                    <span><span>Jami : </span><b>{this.state.trades.reduce(function (accumulator, currentValue) {\r\n                                        return accumulator + currentValue.afterDiscountTotalSum;\r\n                                    }, 0)}</b> UZS</span>\r\n                                    : ''\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                {this.state.trades.length ?\r\n                                    <button className=\"btn btn-warning float-right\" onClick={openCloseDayModal}>Kunni yakunlash</button>\r\n                                    : ''\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <Table>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>Sana</th>\r\n                                <th>Jami savdo Summasi</th>\r\n                                <th>Nimalar</th>\r\n                                <th>Amallar</th>\r\n                            </tr>\r\n                            {this.state.trades && this.state.trades.map((item, index) =>\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.createdAt.substr(0, 10) + '  |  ' + item.createdAt.substr(11, 5)}</td>\r\n                                    <td>Jami Savdo : <b>{item.totalSum}</b> UZS <br/>Jami Skidka\r\n                                        : <b>{item.discountDto !== null ? item.discountDto.amount : 0}</b> {item.discountDto !== null ? item.discountDto.discountType === 'PERCENT' ? '%' : 'UZS' : ''}\r\n                                        <br/>Qoldiq: <b>{item.afterDiscountTotalSum}</b> UZS\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-info\" onClick={() => showTradePwa(item)}>...</button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger\"\r\n                                                onClick={() => showTradeRemove(item)}>O'chirish\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n\r\n                        </Table>\r\n                        <Modal size=\"lg\" isOpen={this.state.showSaleModal} toggle={() => openSaleModal('')}>\r\n                            <ModalBody>\r\n                                <div>\r\n                                    {this.state.pwa && this.state.pwa.map((item, index) =>\r\n                                        <div key={index} className=\"row\">\r\n                                            <div className=\"col-md-4\">\r\n                                                <AsyncSelect\r\n                                                    name=\"prodId\"\r\n                                                    cacheOptions\r\n                                                    loadOptions={loadOptions}\r\n                                                    defaultOptions\r\n                                                    value={item.productDto ? item.productDto : ''}\r\n                                                    onInputChange={getProdId}\r\n                                                    onChange={(e) => handleChange(e, index)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <input value={item.amount} type=\"number\" name=\"amount\"\r\n                                                       min={0}\r\n                                                       required={true}\r\n                                                       max={item.productCount}\r\n                                                       onChange={(e) => getAmount(e, index)}/>\r\n                                            </div>\r\n                                            <div className=\"col-md-1\">\r\n                                                <span>{item.productDto.salePrice}</span>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <input\r\n                                                    value={item.realSoldPrice ? item.realSoldPrice : item.productDto.salePrice}\r\n                                                    type=\"number\" name=\"realSoldPrice\"\r\n                                                    min={item.productDto.incomePrice}\r\n                                                    required={true}\r\n                                                    max={'1000000000'}\r\n                                                    onChange={(e) => getRealSoldPrice(e, index)}/>\r\n                                            </div>\r\n                                            <div className=\"col-md-1 ml-3\">\r\n                                                <div className=\"minusButton pb-2 ml-5\"\r\n                                                     onClick={() => removeItem(item, index)}>X\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                    <button className=\"btn btn-success mt-2\" onClick={addPwa}> + Add</button>\r\n                                </div>\r\n                                <div className=\"row mt-5\">\r\n                                    <div className=\"col-md-8\">\r\n                                        <div>\r\n                                            <input type=\"checkbox\" value={this.state.hasDiscount}\r\n                                                   onChange={showDiscount}/>\r\n                                        </div>\r\n                                        <div>\r\n                                            {this.state.discount ?\r\n                                                <div>\r\n                                                    <input type=\"number\" value={this.state.discount.amount}\r\n                                                           onChange={changeDiscountAmount}/>\r\n                                                    <select value={this.state.discount.discountType} name=\"discounType\"\r\n                                                            id=\"discounType\"\r\n                                                            onChange={changeDiscountType}>\r\n                                                        <option value='PERCENT'>%</option>\r\n                                                        <option value='SOM'>SO'M</option>\r\n                                                    </select>\r\n                                                </div> : ''\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <div>Total :\r\n                                            {console.log(this.state.totalAmount, 'amountTOTAL')}\r\n                                            {console.log(this.state.totalDiscount, 'DiscountTOTAL')}\r\n                                            {this.state.totalAmount - this.state.totalDiscount}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button className=\"btn btn-danger\" onClick={() => openSaleModal('')}>Bekor qilish\r\n                                </button>\r\n                                <button className=\"btn btn-success\" onClick={saveOrEditTrade}>Saqlash</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                        <Modal isOpen={this.state.showTradePwaModal} toggle={() => showTradePwa('')}>\r\n                            <ModalBody>\r\n                                <Table>\r\n                                    <tr>\r\n                                        <th>T/R</th>\r\n                                        <th>Maxsulot Nomi</th>\r\n                                        <th>Soni</th>\r\n                                        <th>Real Sotilgan narxi</th>\r\n                                    </tr>\r\n                                    {this.state.item ? this.state.item.productWithAmountDtos && this.state.item.productWithAmountDtos.map((itemm, index) =>\r\n                                        <tr>\r\n                                            <td>{index + 1}</td>\r\n                                            <td>{itemm.productDto.name}</td>\r\n                                            <td>{itemm.amount}</td>\r\n                                            <td>{itemm.realSoldPrice}</td>\r\n                                        </tr>\r\n                                    )\r\n\r\n                                        : ''\r\n                                    }\r\n                                </Table>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button className=\"btn btn-warning\" onClick={() => showTradePwa('')}>Yopish</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                        <Modal isOpen={this.state.showTradeRemoveModal} toggle={() => showTradeRemove('')}>\r\n                            <ModalHeader>O'chirmoqchimisiz?</ModalHeader>\r\n                            <ModalFooter>\r\n                                <button className=\"btn btn-danger\" onClick={() => showTradeRemove('')}>Bekor Qilish\r\n                                </button>\r\n                                <button className=\"btn btn-warning\" onClick={removeTrade}>O'chirish</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                        <Modal isOpen={this.state.showCloseDayModal} toggle={openCloseDayModal}>\r\n                            <ModalHeader>Kunni yakunlamoqchimisiz?</ModalHeader>\r\n                            <ModalFooter>\r\n                                <button className=\"btn btn-danger\" onClick={openCloseDayModal}>Bekor Qilish\r\n                                </button>\r\n                                <button className=\"btn btn-warning\" onClick={closeDay}>Ha</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <Redirect to=\"/\"/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n}\r\n\r\nSellerSale.propTypes = {};\r\n\r\nexport default connect(null, null)(SellerSale);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {ROLE} from \"../utills/constants\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport AsyncSelect from \"react-select/async/dist/react-select.esm\";\r\nimport AdminRequests from \"../components/catalog_components/AdminRequests\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass SellerReject extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAddRejectModal: false,\r\n            showRejectPwaModal: false,\r\n            showDeleteRejectModal: false,\r\n            showAcceptModal: false,\r\n            item: '',\r\n            pwa: [],\r\n            warehouses: [],\r\n            accepted: false,\r\n            warehouseId: 0,\r\n            page: 0,\r\n            size: 10,\r\n            rejects: [],\r\n            totalElements: 0,\r\n            startDate: '',\r\n            endDate: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allWarehouses().then(response => {\r\n            console.log(response, 'WAREHOUSES')\r\n            this.setState({\r\n                warehouses: response.object\r\n            })\r\n        })\r\n        AdminRequests.allReject(\r\n            {\r\n                accepted: this.state.accepted,\r\n                warehouseId: this.state.warehouseId,\r\n                page: this.state.page,\r\n                size: this.state.size,\r\n                startDate: this.state.startDate,\r\n                endDate: this.state.endDate\r\n            }\r\n        ).then(res => {\r\n            this.setState({\r\n                item: '',\r\n                pwa: [\r\n                    {\r\n                        id: '',\r\n                        productDto: '',\r\n                        amount: 0,\r\n                        productCount: 0,\r\n                        realSoldPrice: 0\r\n                    }\r\n                ],\r\n                rejects: res.object,\r\n                totalElements: res.totalElements\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {history} = this.props\r\n        const openAddRejectModal = (item) => {\r\n            this.setState({\r\n                showAddRejectModal: !this.state.showAddRejectModal,\r\n                item,\r\n                pwa: [\r\n                    {\r\n                        id: '',\r\n                        productDto: '',\r\n                        amount: 0,\r\n                        productCount: 0,\r\n                        realSoldPrice: 0\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n        const addPwa = () => {\r\n            let tempPwa = this.state.pwa;\r\n            let s = {\r\n                id: '',\r\n                productDto: '',\r\n                amount: 1,\r\n                productCount: 0,\r\n                realSoldPrice: 0\r\n            }\r\n            tempPwa.push(s);\r\n            this.setState({pwa: tempPwa})\r\n        }\r\n        const filterColors = (inputValue) => {\r\n            if (inputValue) {\r\n                return this.state.products.filter(i =>\r\n                    i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n                );\r\n            }\r\n        };\r\n        const loadOptions = (inputValue, callback) => {\r\n            setTimeout(() => {\r\n                callback(filterColors(inputValue));\r\n            }, 100);\r\n        };\r\n        const getProdId = (val) => {\r\n            AdminRequests.searchProduct(val).then(res => {\r\n                this.setState({products: res})\r\n            })\r\n        }\r\n        const handleChange = (e, index) => {\r\n            let tempArr = [...this.state.pwa]\r\n            tempArr[index].productDto = e\r\n            tempArr[index].realSoldPrice = e.salePrice\r\n            this.setState({pwa: tempArr})\r\n\r\n        }\r\n        const getAmount = (e, index) => {\r\n            let el = e.target.value;\r\n            let tempArr = this.state.pwa\r\n            if (Number(el) < 1) {\r\n                e.target.value = undefined\r\n            } else {\r\n                tempArr[index].amount = e.target.value\r\n                this.setState({pwa: tempArr})\r\n            }\r\n\r\n        }\r\n        const removeItem = (item, index) => {\r\n            let tempArr = this.state.pwa\r\n            tempArr.splice(index, 1);\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        const getRealSoldPrice = (e, index) => {\r\n            let el = e.target.value;\r\n            let tempArr = [...this.state.pwa];\r\n            console.log(tempArr[index].productDto.incomePrice, 'XXXX')\r\n            console.log(el, 'VALUE')\r\n            tempArr[index].realSoldPrice = el;\r\n\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        console.log(this.state.pwa, 'PWA')\r\n        const saleReject = () => {\r\n            if (this.state.pwa.length) {\r\n                let obj = {\r\n                    productWithAmountDtos: this.state.pwa\r\n                }\r\n                console.log(obj, \"OBJ\")\r\n                AdminRequests.saveReject(obj).then(response => {\r\n                    AdminRequests.allReject({\r\n                        accepted: this.state.accepted,\r\n                        warehouseId: this.state.warehouseId,\r\n                        page: this.state.page,\r\n                        size: this.state.size,\r\n                        startDate: this.state.startDate,\r\n                        endDate: this.state.endDate\r\n                    }).then(res => {\r\n                        console.log(res, 'RESTES')\r\n                        this.setState({\r\n                            showAddRejectModal: !this.state.showAddRejectModal,\r\n                            item: '',\r\n                            pwa: [\r\n                                {\r\n                                    id: '',\r\n                                    productDto: '',\r\n                                    amount: 0,\r\n                                    productCount: 0,\r\n                                    realSoldPrice: 0\r\n                                }\r\n                            ],\r\n                            rejects: res.object,\r\n                            totalElements: res.totalElements\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        const openShowPwaModal = (item) => {\r\n            console.log(item, \"ITEM\")\r\n            this.setState({\r\n                item: item,\r\n                showRejectPwaModal: !this.state.showRejectPwaModal\r\n            })\r\n        }\r\n        const getByStatus = (e) => {\r\n            let s = e.target.value\r\n            console.log(s, \"SSSS\")\r\n            AdminRequests.allReject({\r\n                accepted: s,\r\n                warehouseId: this.state.warehouseId,\r\n                page: this.state.page,\r\n                size: this.state.size,\r\n                startDate: this.state.startDate,\r\n                endDate: this.state.endDate\r\n            }).then(res => {\r\n                this.setState({\r\n                    item: '',\r\n                    pwa: [\r\n                        {\r\n                            id: '',\r\n                            productDto: '',\r\n                            amount: 0,\r\n                            productCount: 0,\r\n                            realSoldPrice: 0\r\n                        }\r\n                    ],\r\n                    rejects: res.object,\r\n                    totalElements: res.totalElements,\r\n                    accepted: s\r\n                })\r\n            })\r\n        }\r\n        const getByWarehouse = (e) => {\r\n            let s = e.target.value\r\n            console.log(s, \"SSSS\")\r\n            AdminRequests.allReject({\r\n                accepted: this.state.accepted,\r\n                warehouseId: s,\r\n                page: this.state.page,\r\n                size: this.state.size,\r\n                startDate: this.state.startDate,\r\n                endDate: this.state.endDate\r\n            }).then(res => {\r\n                this.setState({\r\n                    item: '',\r\n                    pwa: [\r\n                        {\r\n                            id: '',\r\n                            productDto: '',\r\n                            amount: 0,\r\n                            productCount: 0,\r\n                            realSoldPrice: 0\r\n                        }\r\n                    ],\r\n                    rejects: res.object,\r\n                    totalElements: res.totalElements,\r\n                    accepted: this.state.accepted,\r\n                    warehouseId: s\r\n                })\r\n            })\r\n        }\r\n        const openRemoveRejectModal = (item) => {\r\n            this.setState({\r\n                item,\r\n                showDeleteRejectModal: !this.state.showDeleteRejectModal\r\n            })\r\n        }\r\n        const removeReject = () => {\r\n            AdminRequests.removeReject(this.state.item.id).then(response => {\r\n                AdminRequests.allReject({\r\n                    accepted: this.state.accepted,\r\n                    warehouseId: this.state.warehouseId,\r\n                    page: this.state.page,\r\n                    size: this.state.size\r\n                }).then(res => {\r\n                    this.setState({\r\n                        item: '',\r\n                        pwa: [\r\n                            {\r\n                                id: '',\r\n                                productDto: '',\r\n                                amount: 0,\r\n                                productCount: 0,\r\n                                realSoldPrice: 0\r\n                            }\r\n                        ],\r\n                        rejects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        showDeleteRejectModal: !this.state.showDeleteRejectModal\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const handlePageChange = (pageNumber) => {\r\n            AdminRequests.allReject({\r\n                accepted: this.state.accepted,\r\n                warehouseId: this.state.warehouseId,\r\n                page: pageNumber - 1,\r\n                size: this.state.size,\r\n                startDate: this.state.startDate,\r\n                endDate: this.state.endDate\r\n            }).then(res => {\r\n                this.setState({\r\n                    item: '',\r\n                    pwa: [\r\n                        {\r\n                            id: '',\r\n                            productDto: '',\r\n                            amount: 0,\r\n                            productCount: 0,\r\n                            realSoldPrice: 0\r\n                        }\r\n                    ],\r\n                    rejects: res.object,\r\n                    totalElements: res.totalElements,\r\n                    page: pageNumber - 1\r\n                })\r\n            })\r\n        }\r\n        const openAcceptModal = (item) => {\r\n            this.setState({\r\n                item,\r\n                showAcceptModal: !this.state.showAcceptModal\r\n            })\r\n        }\r\n        const acceptReject = () => {\r\n            AdminRequests.acceptReject(this.state.item.id).then(response => {\r\n                AdminRequests.allReject({\r\n                    accepted: this.state.accepted,\r\n                    warehouseId: this.state.warehouseId,\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate\r\n                }).then(res => {\r\n                    this.setState({\r\n                        item: '',\r\n                        pwa: [\r\n                            {\r\n                                id: '',\r\n                                productDto: '',\r\n                                amount: 0,\r\n                                productCount: 0,\r\n                                realSoldPrice: 0\r\n                            }\r\n                        ],\r\n                        rejects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        showAcceptModal: !this.state.showAcceptModal\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const getStartDate = (startDate) => {\r\n            console.log(startDate,'START_DATE')\r\n            if (this.state.endDate) {\r\n                AdminRequests.allReject(\r\n                    {\r\n                        accepted: this.state.accepted,\r\n                        warehouseId: this.state.warehouseId,\r\n                        page: this.state.page,\r\n                        size: this.state.size,\r\n                        startDate,\r\n                        endDate: this.state.endDate\r\n                    }\r\n                ).then(res => {\r\n                    this.setState({\r\n                        item: '',\r\n                        pwa: [\r\n                            {\r\n                                id: '',\r\n                                productDto: '',\r\n                                amount: 0,\r\n                                productCount: 0,\r\n                                realSoldPrice: 0\r\n                            }\r\n                        ],\r\n                        rejects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        startDate\r\n                    })\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    startDate\r\n                })\r\n            }\r\n        }\r\n        const getEndDate = (endDate) => {\r\n            console.log(endDate,'END_DATE')\r\n            AdminRequests.allReject(\r\n                {\r\n                    accepted: this.state.accepted,\r\n                    warehouseId: this.state.warehouseId,\r\n                    page: this.state.page,\r\n                    size: this.state.size,\r\n                    startDate: this.state.startDate,\r\n                    endDate\r\n                }\r\n            ).then(res => {\r\n                this.setState({\r\n                    item: '',\r\n                    pwa: [\r\n                        {\r\n                            id: '',\r\n                            productDto: '',\r\n                            amount: 0,\r\n                            productCount: 0,\r\n                            realSoldPrice: 0\r\n                        }\r\n                    ],\r\n                    rejects: res.object,\r\n                    totalElements: res.totalElements,\r\n                    endDate\r\n                })\r\n            })\r\n        }\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-md-2 col-2-style'>\r\n                    <Navbar role={getRoleNameFromJWT()} history={history} tab=\"4\"/>\r\n                </div>\r\n                <div className='col-md-10 col-10-style'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                            {getRoleNameFromJWT() === 'ROLE_SELLER' ?\r\n                                <div>\r\n                                    <button className=\"btn btn-success\" onClick={() => openAddRejectModal('')}>+Add\r\n                                    </button>\r\n                                </div>\r\n                                :\r\n                                <div>\r\n                                    <select name=\"status\" id=\"status\" onChange={getByWarehouse}>\r\n                                        <option value=\"0\">Barchasi</option>\r\n                                        {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                            <option value={item.id}>{item.name}</option>\r\n                                        )}\r\n                                    </select>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <select name=\"status\" id=\"status\" onChange={getByStatus}>\r\n                                <option value=\"false\">Tasdiqlanmagan</option>\r\n                                <option value=\"true\">Tasdiqlangan</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <DatePicker\r\n                                selected={this.state.startDate}\r\n                                onChange={(date) => getStartDate(date)}\r\n                                selectsStart\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                            />\r\n                            <DatePicker\r\n                                selected={this.state.endDate}\r\n                                onChange={(date) => getEndDate(date)}\r\n                                selectsEnd\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                minDate={this.state.startDate}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Pagination\r\n                                activePage={this.state.page + 1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Table>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>Magazin</th>\r\n                                <th>Sotuvchi</th>\r\n                                <th>Kim tasdiqladi</th>\r\n                                <th>Sana</th>\r\n                                <th>Summa</th>\r\n                                <th>Tasdiqlangan</th>\r\n                                <th>Nimalar</th>\r\n                                <th>Action</th>\r\n\r\n                            </tr>\r\n                            {this.state.rejects && this.state.rejects.map((item, index) =>\r\n                                <tr>\r\n                                    <td>{index + 1 + (this.state.page * this.state.size)}</td>\r\n                                    <td>{item.warehouseDto.shopDto.name}</td>\r\n                                    <td>{item.seller.firstName + ' ' + item.seller.lastName}</td>\r\n                                    <td>{item.manager ? item.manager.firstName + ' ' + item.manager.lastName : ''}</td>\r\n                                    <td>{item.createdAt.substr(0, 10) + '  |  ' + item.createdAt.substr(11, 5)}</td>\r\n                                    <td>{item.rejectTotalSum}</td>\r\n                                    <td><input type=\"checkbox\" checked={item.accepted}/></td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-info\" onClick={() => openShowPwaModal(item)}>...\r\n                                        </button>\r\n                                    </td>\r\n                                    <td>\r\n                                        {getRoleNameFromJWT() === 'ROLE_SELLER' ?\r\n                                            item.accepted ?\r\n                                                '' :\r\n                                                <button className=\"btn btn-danger\"\r\n                                                        onClick={() => openRemoveRejectModal(item)}>O'chirish</button>\r\n                                            :\r\n                                            item.accepted ?\r\n                                                '' :\r\n                                                <button className=\"btn btn-success\"\r\n                                                        onClick={() => openAcceptModal(item)}>Tasdiqlash</button>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </Table>\r\n                    </div>\r\n                    <Modal size=\"lg\" isOpen={this.state.showAddRejectModal} toggle={() => openAddRejectModal('')}>\r\n                        <ModalBody>\r\n                            <div>\r\n                                {this.state.pwa && this.state.pwa.map((item, index) =>\r\n                                    <div key={index} className=\"row\">\r\n                                        <div className=\"col-md-4\">\r\n                                            <label htmlFor=\"prodId\">Maxsulot</label>\r\n                                            <AsyncSelect\r\n                                                name=\"prodId\"\r\n                                                id=\"prodId\"\r\n                                                cacheOptions\r\n                                                loadOptions={loadOptions}\r\n                                                defaultOptions\r\n                                                value={item.productDto ? item.productDto : ''}\r\n                                                onInputChange={getProdId}\r\n                                                onChange={(e) => handleChange(e, index)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-md-2 mr-2\">\r\n                                            <label htmlFor=\"amount\">Son</label>\r\n                                            <input value={item.amount} type=\"number\" name=\"amount\" id=\"amount\"\r\n                                                   min={1}\r\n                                                   required={true}\r\n                                                   onChange={(e) => getAmount(e, index)}/>\r\n                                        </div>\r\n                                        <div className=\"col-md-2 ml-2\">\r\n                                            <label htmlFor=\"rejectSum\">QaytarilganSumma/dona</label>\r\n                                            <input\r\n                                                id=\"rejectSum\"\r\n                                                value={item.realSoldPrice}\r\n                                                type=\"number\" name=\"realSoldPrice\"\r\n                                                required={true}\r\n                                                onChange={(e) => getRealSoldPrice(e, index)}/>\r\n                                        </div>\r\n                                        <div className=\"col-md-1 ml-3\">\r\n                                            <div className=\"minusButton pb-2 ml-5\"\r\n                                                 onClick={() => removeItem(item, index)}>X\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <button className=\"btn btn-success mt-2\" onClick={addPwa}> + Add</button>\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-danger\" onClick={() => openAddRejectModal('')}>Bekor qilish\r\n                            </button>\r\n                            <button className=\"btn btn-success\" onClick={saleReject}>Saqlash</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showRejectPwaModal} toggle={() => openShowPwaModal('')}>\r\n                        <ModalBody>\r\n                            <Table>\r\n                                <tr>\r\n                                    <th>T/R</th>\r\n                                    <th>Maxsulot Nomi</th>\r\n                                    <th>Soni</th>\r\n                                    <th>QaytarilganSumma/Dona</th>\r\n                                </tr>\r\n                                {this.state.item ? this.state.item.productWithAmountDtos && this.state.item.productWithAmountDtos.map((itemm, index) =>\r\n                                    <tr>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{itemm.productDto.name}</td>\r\n                                        <td>{itemm.amount}</td>\r\n                                        <td>{itemm.realSoldPrice}</td>\r\n                                    </tr>\r\n                                )\r\n\r\n                                    : ''\r\n                                }\r\n                            </Table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-warning\" onClick={() => openShowPwaModal('')}>Yopish</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showDeleteRejectModal} toggle={() => openRemoveRejectModal('')}>\r\n                        <ModalHeader>O'chirmoqchimisiz?</ModalHeader>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-danger\" onClick={() => openRemoveRejectModal('')}>Bekor Qilish\r\n                            </button>\r\n                            <button className=\"btn btn-warning\" onClick={removeReject}>O'chirish</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showAcceptModal} toggle={() => openAcceptModal('')}>\r\n                        <ModalHeader>Tasdiqlamoqchimisiz?</ModalHeader>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-danger\" onClick={() => openAcceptModal('')}>Bekor Qilish\r\n                            </button>\r\n                            <button className=\"btn btn-success\" onClick={acceptReject}>Tasdiqlash</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSellerReject.propTypes = {};\r\n\r\nexport default SellerReject;","import React, {Component} from 'react';\r\nimport Navbar from \"../components/Navbar\";\r\nimport {getRoleNameFromJWT} from \"../utills/UsefullFunctions\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Table} from \"reactstrap\";\r\nimport AsyncSelect from \"react-select/async/dist/react-select.esm\";\r\nimport AdminRequests from \"../components/catalog_components/AdminRequests\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass SellerDefect extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: '',\r\n            showDefectModal: false,\r\n            showItemModal: false,\r\n            pwa: [],\r\n            warehouseDto: {\r\n                id: 0\r\n            },\r\n            warehouses: [],\r\n            page: 0,\r\n            size: 10,\r\n            totalElements: 0,\r\n            defects: [],\r\n            accepted: false,\r\n            warehouseId: 0,\r\n            showAcceptModal:false,\r\n            showRemoveDefectModal:false,\r\n            startDate: '',\r\n            endDate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        AdminRequests.allWarehouseWithoutPageable().then(res => {\r\n            console.log(res, \"allALL\")\r\n            this.setState({warehouses: res})\r\n        })\r\n        console.log(this.state.startDate,'STARTDATE')\r\n        console.log(this.state.endDate,'ENDDATE')\r\n            AdminRequests.allDefects({\r\n                page: this.state.page,\r\n                size: this.state.size, accepted: this.state.accepted,\r\n                warehouseId: this.state.warehouseId,\r\n                startDate: '', endDate:''\r\n            }).then(res => {\r\n                console.log(res, 'RESRESRES')\r\n                this.setState({\r\n                    defects: res.object,\r\n                    totalElements: res.totalElements\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {history} = this.props;\r\n        const openDefectModal = (item) => {\r\n            let temp = [\r\n                {\r\n                    id: '',\r\n                    productDto: '',\r\n                    amount: 1,\r\n                    productCount: 0,\r\n                    realSoldPrice: 0\r\n                }\r\n            ]\r\n            let s = {\r\n                id: 0\r\n            }\r\n\r\n            this.setState({\r\n                item,\r\n                showDefectModal: !this.state.showDefectModal,\r\n                pwa: temp,\r\n                warehouseDto: s\r\n            })\r\n        }\r\n        const addPwa = () => {\r\n            let tempPwa = this.state.pwa;\r\n            let s = {\r\n                id: '',\r\n                productDto: '',\r\n                amount: 1,\r\n                productCount: 0,\r\n                realSoldPrice: 0\r\n            }\r\n            tempPwa.push(s);\r\n            this.setState({pwa: tempPwa})\r\n        }\r\n        const filterColors = (inputValue) => {\r\n            if (inputValue) {\r\n                return this.state.products.filter(i =>\r\n                    i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n                );\r\n            }\r\n        };\r\n        const loadOptions = (inputValue, callback) => {\r\n            setTimeout(() => {\r\n                callback(filterColors(inputValue));\r\n            }, 100);\r\n        };\r\n        const getProdId = (val) => {\r\n            AdminRequests.searchProduct(val).then(res => {\r\n                this.setState({products: res})\r\n            })\r\n        }\r\n        const handleChange = (e, index) => {\r\n            let tempArr = [...this.state.pwa]\r\n            tempArr[index].productDto = e\r\n            tempArr[index].realSoldPrice = e.salePrice\r\n            this.setState({pwa: tempArr})\r\n\r\n        }\r\n        const getAmount = (e, index) => {\r\n            let el = e.target.value;\r\n            let tempArr = this.state.pwa\r\n            if (Number(el) < 1) {\r\n                e.target.value = undefined\r\n            } else {\r\n                tempArr[index].amount = e.target.value\r\n                this.setState({pwa: tempArr})\r\n            }\r\n\r\n        }\r\n        const removeItem = (item, index) => {\r\n            let tempArr = this.state.pwa\r\n            tempArr.splice(index, 1);\r\n            this.setState({pwa: tempArr})\r\n        }\r\n        const saveDefect = () => {\r\n            let s = {\r\n                warehouseDto: this.state.warehouseDto,\r\n                productWithAmountDtos: this.state.pwa\r\n            }\r\n            AdminRequests.saveOrEditDefect(s).then(response => {\r\n                let temp = [\r\n                    {\r\n                        id: '',\r\n                        productDto: '',\r\n                        amount: 1,\r\n                        productCount: 0,\r\n                        realSoldPrice: 0\r\n                    }\r\n                ]\r\n                let s = {\r\n                    id: 0\r\n                }\r\n                AdminRequests.allDefects({\r\n                    page: this.state.page,\r\n                    size: this.state.size, accepted: this.state.accepted,\r\n                    warehouseId: this.state.warehouseId\r\n                }).then(res => {\r\n                    console.log(res, 'RESRESRES')\r\n                    this.setState({\r\n                        defects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        item: '',\r\n                        showDefectModal: !this.state.showDefectModal,\r\n                        pwa: temp,\r\n                        warehouseDto: s\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const getWarehouseId = (e) => {\r\n            let temp = this.state.warehouseDto\r\n            temp.id = e.target.value\r\n            this.setState({\r\n                warehouseDto: temp\r\n            })\r\n        }\r\n        const openPwaModal=(item)=>{\r\n            this.setState({\r\n                item,\r\n                showItemModal:!this.state.showItemModal\r\n            })\r\n        }\r\n        const openAcceptModal=(item)=>{\r\n            this.setState({\r\n                item,\r\n                showAcceptModal:!this.state.showAcceptModal\r\n            })\r\n        }\r\n        const accept=()=>{\r\n            AdminRequests.acceptDefect(this.state.item.id).then(response=>{\r\n                let temp = [\r\n                    {\r\n                        id: '',\r\n                        productDto: '',\r\n                        amount: 1,\r\n                        productCount: 0,\r\n                        realSoldPrice: 0\r\n                    }\r\n                ]\r\n                let s = {\r\n                    id: 0\r\n                }\r\n                AdminRequests.allDefects({\r\n                    page: this.state.page,\r\n                    size: this.state.size, accepted: this.state.accepted,\r\n                    warehouseId: this.state.warehouseId\r\n                }).then(res => {\r\n                    console.log(res, 'RESRESRES')\r\n                    this.setState({\r\n                        defects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        item: '',\r\n                        showAcceptModal: !this.state.showAcceptModal,\r\n                        pwa: temp,\r\n                        warehouseDto: s\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const getByStatus=(e)=>{\r\n            let s=e.target.value\r\n            if (this.state.startDate&&this.state.endDate){\r\n                AdminRequests.allDefects({\r\n                    page: this.state.page,\r\n                    size: this.state.size, accepted:s,\r\n                    warehouseId: this.state.warehouseId,\r\n                    startDate: this.state.startDate, endDate: this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, 'RESRESRES')\r\n                    this.setState({\r\n                        defects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        accepted:s\r\n                    })\r\n                })\r\n            }else {\r\n                AdminRequests.allDefects({\r\n                    page: this.state.page,\r\n                    size: this.state.size, accepted: s,\r\n                    warehouseId: this.state.warehouseId,\r\n                    startDate: '', endDate:''\r\n                }).then(res => {\r\n                    console.log(res, 'RESRESRES')\r\n                    this.setState({\r\n                        defects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        accepted:s\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        const handlePageChange=(pageNumber)=>{\r\n            AdminRequests.allDefects({\r\n                page: pageNumber-1,\r\n                size: this.state.size,\r\n                accepted: this.state.accepted,\r\n                warehouseId: this.state.warehouseId\r\n            }).then(res => {\r\n                console.log(res, 'RESRESRES')\r\n                this.setState({\r\n                    defects: res.object,\r\n                    page: pageNumber-1,\r\n                    totalElements: res.totalElements\r\n                })\r\n            })\r\n        }\r\n        const getByFromWarehouse = (e) => {\r\n            let s = e.target.value;\r\n            if (this.state.startDate&&this.state.endDate){\r\n                AdminRequests.allDefects({\r\n                    page: this.state.page,\r\n                    size: this.state.size, accepted: this.state.accepted,\r\n                    warehouseId: s,\r\n                    startDate: this.state.startDate, endDate: this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, 'RESRESRES')\r\n                    this.setState({\r\n                        defects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        warehouseId:s\r\n                    })\r\n                })\r\n            }else {\r\n                AdminRequests.allDefects({\r\n                    page: this.state.page,\r\n                    size: this.state.size, accepted: this.state.accepted,\r\n                    warehouseId:s,\r\n                    startDate: '', endDate:''\r\n                }).then(res => {\r\n                    console.log(res, 'RESRESRES')\r\n                    this.setState({\r\n                        defects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        warehouseId:s\r\n                    })\r\n                })\r\n            }\r\n\r\n        }\r\n        const openRemoveDefectModal=(item)=>{\r\n            this.setState({\r\n                item,\r\n                showRemoveDefectModal:!this.state.showRemoveDefectModal\r\n            })\r\n        }\r\n        const removeDefect=()=>{\r\n            AdminRequests.removeDefect(this.state.item.id).then(response=>{\r\n                AdminRequests.allDefects({\r\n                    page: this.state.page,\r\n                    size: this.state.size, accepted: this.state.accepted,\r\n                    warehouseId: this.state.warehouseId\r\n                }).then(res => {\r\n                    console.log(res, 'RESRESRES')\r\n                    this.setState({\r\n                        defects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        item:'',\r\n                        showRemoveDefectModal:!this.state.showRemoveDefectModal\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        const getStartDate=(startDate)=>{\r\n            if (this.state.endDate){\r\n                AdminRequests.allDefects({\r\n                    page: this.state.page,\r\n                    size: this.state.size, accepted: this.state.accepted,\r\n                    warehouseId: this.state.warehouseId,\r\n                    startDate: startDate, endDate: this.state.endDate\r\n                }).then(res => {\r\n                    console.log(res, 'RESRESRES')\r\n                    this.setState({\r\n                        defects: res.object,\r\n                        totalElements: res.totalElements,\r\n                        startDate\r\n                    })\r\n                })\r\n            }else {\r\n                this.setState({\r\n                    startDate\r\n                })\r\n            }\r\n        }\r\n        const getEndDate=(endDate)=>{\r\n            AdminRequests.allDefects({\r\n                page: this.state.page,\r\n                size: this.state.size, accepted: this.state.accepted,\r\n                warehouseId: this.state.warehouseId,\r\n                startDate: this.state.startDate, endDate: endDate\r\n            }).then(res => {\r\n                console.log(res, 'RESRESRES')\r\n                this.setState({\r\n                    defects: res.object,\r\n                    totalElements: res.totalElements,\r\n                    endDate\r\n                })\r\n            })\r\n        }\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-md-2 col-2-style'>\r\n                    <Navbar role={getRoleNameFromJWT()} history={history} tab=\"5\"/>\r\n                </div>\r\n                <div className='col-md-10 col-10-style'>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <button className=\"btn btn-success\" onClick={() => openDefectModal('')}>+Add</button>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <DatePicker\r\n                                selected={this.state.startDate}\r\n                                onChange={(date) => getStartDate(date)}\r\n                                selectsStart\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                            />\r\n                            <DatePicker\r\n                                selected={this.state.endDate}\r\n                                onChange={(date) => getEndDate(date)}\r\n                                selectsEnd\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                minDate={this.state.startDate}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            <select name=\"status\" id=\"status\" onChange={getByStatus}>\r\n                                <option value=\"false\">Tasdiqlanmagan</option>\r\n                                <option value=\"true\">Tasdiqlangan</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            {getRoleNameFromJWT() === 'ROLE_DIRECTOR' || getRoleNameFromJWT() === 'ROLE_MANAGER' ?\r\n                                <select name=\"warehouse\" id=\"warehouse\" onChange={getByFromWarehouse}>\r\n                                    <option value={0}>Barcha Omborlar :</option>\r\n                                    {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                        <option value={item.id}>{item.name}</option>\r\n                                    )}\r\n                                </select> : ''\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Pagination\r\n                                activePage={this.state.page+1}\r\n                                itemsCountPerPage={this.state.size}\r\n                                totalItemsCount={this.state.totalElements}\r\n                                pageRangeDisplayed={5}\r\n                                onChange={handlePageChange}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Table>\r\n                            <tr>\r\n                                <th>T/R</th>\r\n                                <th>Ombor</th>\r\n                                <th>Sana</th>\r\n                                <th>Kim</th>\r\n                                {\r\n                                    getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                        <th>Summa</th>\r\n                                        : ''\r\n                                }\r\n                                <th>Tasdiqlangan</th>\r\n                                <th>Nimalar</th>\r\n                                <th>Amallar</th>\r\n                            </tr>\r\n                            {this.state.defects&&this.state.defects.map((item,index)=>\r\n                                <tr>\r\n                                    <td>{index+1+(this.state.page*this.state.size)}</td>\r\n                                    <td>{item.warehouseDto.name}</td>\r\n                                    <td>{item.createdAt.substr(0, 10) + '  |  ' + item.createdAt.substr(11, 5)}</td>\r\n                                    <td>{item.createdBy.firstName + ' ' + item.createdBy.lastName}</td>\r\n                                    {\r\n                                        getRoleNameFromJWT() === 'ROLE_DIRECTOR' ?\r\n                                            <td><b>{item.totalDefectSum}</b>  UZS</td>\r\n                                            : ''\r\n                                    }\r\n                                    <td><input type=\"checkbox\" checked={item.accepted}/></td>\r\n                                    <td><button className=\"btn btn-info\" onClick={()=>openPwaModal(item)}>...</button></td>\r\n                                    {\r\n                                        item.accepted?\r\n                                            ''\r\n                                            :\r\n                                            getRoleNameFromJWT()==='ROLE_DIRECTOR'?\r\n                                                <div className=\"mt-2\">\r\n                                                    <button className=\"btn btn-success\" onClick={()=>openAcceptModal(item)}>Tasdiqlash</button>\r\n                                                    <button className=\"btn btn-danger ml-3\" onClick={()=>openRemoveDefectModal(item)}>O'chirish</button>\r\n                                                </div>\r\n                                                :\r\n                                                <button className=\"btn btn-danger\">O'chirish</button>\r\n\r\n                                    }\r\n                                </tr>\r\n                            )}\r\n                        </Table>\r\n                    </div>\r\n                    <Modal size=\"lg\" isOpen={this.state.showDefectModal} toggle={() => openDefectModal('')}>\r\n                        <ModalBody>\r\n                            <div className=\"row\">\r\n                                {getRoleNameFromJWT() === 'ROLE_DIRECTOR' || getRoleNameFromJWT() === 'ROLE_MANAGER' ?\r\n                                    <div>\r\n                                        <label htmlFor=\"warehouse\">Ombor tanlang : </label>\r\n                                        <select className=\"ml-3\" name=\"warehouse\" id=\"warehouse\"\r\n                                                onChange={getWarehouseId}>\r\n                                            <option value={0}>Ombor tanlang :</option>\r\n                                            {this.state.warehouses && this.state.warehouses.map(item =>\r\n                                                <option value={item.id}>{item.name}</option>\r\n                                            )}\r\n                                        </select>\r\n                                    </div> : ''\r\n                                }\r\n                            </div>\r\n                            <div>\r\n\r\n                                {this.state.pwa && this.state.pwa.map((item, index) =>\r\n                                    <div key={index} className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-4\">\r\n                                                    <label htmlFor=\"prodId\">Maxsulot</label>\r\n                                                    <AsyncSelect\r\n                                                        name=\"prodId\"\r\n                                                        id=\"prodId\"\r\n                                                        cacheOptions\r\n                                                        loadOptions={loadOptions}\r\n                                                        defaultOptions\r\n                                                        value={item.productDto ? item.productDto : ''}\r\n                                                        onInputChange={getProdId}\r\n                                                        onChange={(e) => handleChange(e, index)}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-md-2 mr-2\">\r\n                                                    <label htmlFor=\"amount\">Son</label>\r\n                                                    <input value={item.amount} type=\"number\" name=\"amount\" id=\"amount\"\r\n                                                           min={1}\r\n                                                           required={true}\r\n                                                           onChange={(e) => getAmount(e, index)}/>\r\n                                                </div>\r\n                                                <div className=\"col-md-1 ml-3\">\r\n                                                    <div className=\"minusButton ml-5 mt-4\"\r\n                                                         onClick={() => removeItem(item, index)}>X\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )}\r\n                                <button className=\"btn btn-success mt-2\" onClick={addPwa}> + Add</button>\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-danger\" onClick={() => openDefectModal('')}>Bekor qilish</button>\r\n                            <button className=\"btn btn-success\" onClick={saveDefect}>Saqlash</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showItemModal} toggle={() => openPwaModal('')}>\r\n                        <ModalBody>\r\n                            <Table>\r\n                                <tr>\r\n                                    <th>T/R</th>\r\n                                    <th>Maxsulot Nomi</th>\r\n                                    <th>Soni</th>\r\n                                </tr>\r\n                                {this.state.item?this.state.item.productWithAmountDtos&&this.state.item.productWithAmountDtos.map((itemm,index)=>\r\n                                    <tr>\r\n                                        <td>{index+1}</td>\r\n                                        <td>{itemm.productDto.name}</td>\r\n                                        <td>{itemm.amount}</td>\r\n                                    </tr>\r\n                                )\r\n\r\n                                    :''\r\n                                }\r\n                            </Table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-warning\" onClick={() => openPwaModal('')}>Yopish</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showAcceptModal} toggle={() => openAcceptModal('')}>\r\n                        <ModalHeader>Tasdiqlamoqchimisiz?</ModalHeader>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-danger\" onClick={() => openAcceptModal('')}>Bekor Qilish</button>\r\n                            <button className=\"btn btn-warning\" onClick={accept}>Tasdiqlash</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <Modal isOpen={this.state.showRemoveDefectModal} toggle={() => openRemoveDefectModal('')}>\r\n                        <ModalHeader>O'chirasizmi?</ModalHeader>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-danger\" onClick={() => openRemoveDefectModal('')}>Bekor Qilish</button>\r\n                            <button className=\"btn btn-warning\" onClick={removeDefect}>O'chirish</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSellerDefect.propTypes = {};\r\n\r\nexport default SellerDefect;","import React from \"react\";\r\nimport {applyMiddleware, compose, createStore} from 'redux'\r\nimport {rootReducer} from \"./redux/reducers/RootReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport {createBrowserHistory} from \"history\";\r\nimport {routerMiddleware} from \"react-router-redux\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport {Provider} from \"react-redux\";\r\nimport PublicRoute from \"./utills/PublicRoute\";\r\nimport PrivateRoute from \"./utills/PrivateRoute\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport Report from \"./pages/Report\";\r\nimport Warehouse from \"./pages/Warehouse\";\r\nimport Transfer from \"./pages/Transfer\";\r\nimport Catalog from \"./pages/Catalog\";\r\nimport Settings from \"./pages/Settings\";\r\nimport SellerSale from \"./pages/SellerSale\";\r\nimport SellerReject from \"./pages/SellerReject\";\r\nimport SellerDefect from \"./pages/SellerDefect\";\r\nimport {ToastContainer} from \"react-toastify\";\r\n\r\nconst history = createBrowserHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst middlewares = [thunkMiddleware, routeMiddleware]\r\n\r\nconst store = createStore(rootReducer, compose(\r\n    applyMiddleware(...middlewares)\r\n))\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <ToastContainer/>\r\n                <Switch>\r\n                    <Route exact path=\"/mainPage\" component={MainPage}/>\r\n                    <Route exact path=\"/report\" component={Report}/>\r\n                    <Route exact path=\"/warehouse\" component={Warehouse}/>\r\n                    <Route exact path=\"/transfer\" component={Transfer}/>\r\n                    <Route exact path=\"/catalog\" component={Catalog}/>\r\n\r\n                    <Route exact path=\"/report\" component={Report}/>\r\n                    <Route exact path=\"/warehouse\" component={Warehouse}/>\r\n                    <Route exact path=\"/transfer\" component={Transfer}/>\r\n                    <Route exact path=\"/catalog\" component={Catalog}/>\r\n\r\n                    <Route exact path=\"/sellerSale\" component={SellerSale}/>\r\n                    <Route exact path=\"/transfer\" component={Transfer}/>\r\n                    <Route exact path=\"/report\" component={Report}/>\r\n                    <Route exact path=\"/warehouse\" component={Warehouse}/>\r\n                    <Route exact path=\"/sellerReject\" component={SellerReject}/>\r\n                    <Route exact path=\"/sellerDefect\" component={SellerDefect}/>\r\n\r\n                    <Route exact path=\"/settings\" component={Settings}/>\r\n                    <PublicRoute exact path=\"/\" component={HomePage}/>\r\n                </Switch>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}